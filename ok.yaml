apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/network-policy-api/pull/30
    policy.networking.k8s.io/bundle-version: v0.1.1
    policy.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: adminnetworkpolicies.policy.networking.k8s.io
spec:
  group: policy.networking.k8s.io
  names:
    kind: AdminNetworkPolicy
    listKind: AdminNetworkPolicyList
    plural: adminnetworkpolicies
    shortNames:
    - anp
    singular: adminnetworkpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.priority
      name: Priority
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          AdminNetworkPolicy is  a cluster level resource that is part of the
          AdminNetworkPolicy API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of AdminNetworkPolicy.
            properties:
              egress:
                description: |-
                  Egress is the list of Egress rules to be applied to the selected pods.
                  A total of 100 rules will be allowed in each ANP instance.
                  The relative precedence of egress rules within a single ANP object (all of
                  which share the priority) will be determined by the order in which the rule
                  is written. Thus, a rule that appears at the top of the egress rules
                  would take the highest precedence.
                  ANPs with no egress rules do not affect egress traffic.


                  Support: Core
                items:
                  description: |-
                    AdminNetworkPolicyEgressRule describes an action to take on a particular
                    set of traffic originating from pods selected by a AdminNetworkPolicy's
                    Subject field.
                    <network-policy-api:experimental:validation>
                  properties:
                    action:
                      description: |-
                        Action specifies the effect this rule will have on matching traffic.
                        Currently the following actions are supported:
                        Allow: allows the selected traffic (even if it would otherwise have been denied by NetworkPolicy)
                        Deny: denies the selected traffic
                        Pass: instructs the selected traffic to skip any remaining ANP rules, and
                        then pass execution to any NetworkPolicies that select the pod.
                        If the pod is not selected by any NetworkPolicies then execution
                        is passed to any BaselineAdminNetworkPolicies that select the pod.


                        Support: Core
                      enum:
                      - Allow
                      - Deny
                      - Pass
                      type: string
                    name:
                      description: |-
                        Name is an identifier for this rule, that may be no more than 100 characters
                        in length. This field should be used by the implementation to help
                        improve observability, readability and error-reporting for any applied
                        AdminNetworkPolicies.


                        Support: Core
                      maxLength: 100
                      type: string
                    ports:
                      description: |-
                        Ports allows for matching traffic based on port and protocols.
                        This field is a list of destination ports for the outgoing egress traffic.
                        If Ports is not set then the rule does not filter traffic via port.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyPort describes how to select network ports on pod(s).
                          Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: |-
                              NamedPort selects a port on a pod(s) based on name.


                              Support: Extended


                              <network-policy-api:experimental>
                            type: string
                          portNumber:
                            description: |-
                              Port selects a port on a pod(s) based on number.


                              Support: Core
                            properties:
                              port:
                                description: |-
                                  Number defines a network port value.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: |-
                              PortRange selects a port range on a pod(s) based on provided start and end
                              values.


                              Support: Core
                            properties:
                              end:
                                description: |-
                                  End defines a network port that is the end of a port range, the End value
                                  must be greater than Start.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                              start:
                                description: |-
                                  Start defines a network port that is the start of a port range, the Start
                                  value must be less than End.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                    to:
                      description: |-
                        To is the List of destinations whose traffic this rule applies to.
                        If any AdminNetworkPolicyEgressPeer matches the destination of outgoing
                        traffic then the specified action is applied.
                        This field must be defined and contain at least one item.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyEgressPeer defines a peer to allow traffic to.
                          Exactly one of the selector pointers must be set for a given peer. If a
                          consumer observes none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: |-
                              Namespaces defines a way to select all pods within a set of Namespaces.
                              Note that host-networked pods are not included in this type of peer.


                              Support: Core
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          networks:
                            description: |-
                              Networks defines a way to select peers via CIDR blocks.
                              This is intended for representing entities that live outside the cluster,
                              which can't be selected by pods, namespaces and nodes peers, but note
                              that cluster-internal traffic will be checked against the rule as
                              well. So if you Allow or Deny traffic to `"0.0.0.0/0"`, that will allow
                              or deny all IPv4 pod-to-pod traffic as well. If you don't want that,
                              add a rule that Passes all pod traffic before the Networks rule.


                              Each item in Networks should be provided in the CIDR format and should be
                              IPv4 or IPv6, for example "10.0.0.0/8" or "fd00::/8".


                              Networks can have upto 25 CIDRs specified.


                              Support: Extended


                              <network-policy-api:experimental>
                            items:
                              description: |-
                                CIDR is an IP address range in CIDR notation (for example, "10.0.0.0/8" or "fd00::/8").
                                This string must be validated by implementations using net.ParseCIDR
                                TODO: Introduce CEL CIDR validation regex isCIDR() in Kube 1.31 when it is available.
                              maxLength: 43
                              type: string
                              x-kubernetes-validations:
                              - message: CIDR must be either an IPv4 or IPv6 address.
                                  IPv4 address embedded in IPv6 addresses are not
                                  supported
                                rule: self.contains(':') != self.contains('.')
                            maxItems: 25
                            minItems: 1
                            type: array
                            x-kubernetes-list-type: set
                          nodes:
                            description: |-
                              Nodes defines a way to select a set of nodes in
                              the cluster. This field follows standard label selector
                              semantics; if present but empty, it selects all Nodes.


                              Support: Extended


                              <network-policy-api:experimental>
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          pods:
                            description: |-
                              Pods defines a way to select a set of pods in
                              a set of namespaces. Note that host-networked pods
                              are not included in this type of peer.


                              Support: Core
                            properties:
                              namespaceSelector:
                                description: |-
                                  NamespaceSelector follows standard label selector semantics; if empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  PodSelector is used to explicitly select pods within a namespace; if empty,
                                  it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaceSelector
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                  required:
                  - action
                  - to
                  type: object
                  x-kubernetes-validations:
                  - message: networks/nodes peer cannot be set with namedPorts since
                      there are no namedPorts for networks/nodes
                    rule: '!(self.to.exists(peer, has(peer.networks) || has(peer.nodes))
                      && has(self.ports) && self.ports.exists(port, has(port.namedPort)))'
                maxItems: 100
                type: array
              ingress:
                description: |-
                  Ingress is the list of Ingress rules to be applied to the selected pods.
                  A total of 100 rules will be allowed in each ANP instance.
                  The relative precedence of ingress rules within a single ANP object (all of
                  which share the priority) will be determined by the order in which the rule
                  is written. Thus, a rule that appears at the top of the ingress rules
                  would take the highest precedence.
                  ANPs with no ingress rules do not affect ingress traffic.


                  Support: Core
                items:
                  description: |-
                    AdminNetworkPolicyIngressRule describes an action to take on a particular
                    set of traffic destined for pods selected by an AdminNetworkPolicy's
                    Subject field.
                  properties:
                    action:
                      description: |-
                        Action specifies the effect this rule will have on matching traffic.
                        Currently the following actions are supported:
                        Allow: allows the selected traffic (even if it would otherwise have been denied by NetworkPolicy)
                        Deny: denies the selected traffic
                        Pass: instructs the selected traffic to skip any remaining ANP rules, and
                        then pass execution to any NetworkPolicies that select the pod.
                        If the pod is not selected by any NetworkPolicies then execution
                        is passed to any BaselineAdminNetworkPolicies that select the pod.


                        Support: Core
                      enum:
                      - Allow
                      - Deny
                      - Pass
                      type: string
                    from:
                      description: |-
                        From is the list of sources whose traffic this rule applies to.
                        If any AdminNetworkPolicyIngressPeer matches the source of incoming
                        traffic then the specified action is applied.
                        This field must be defined and contain at least one item.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyIngressPeer defines an in-cluster peer to allow traffic from.
                          Exactly one of the selector pointers must be set for a given peer. If a
                          consumer observes none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: |-
                              Namespaces defines a way to select all pods within a set of Namespaces.
                              Note that host-networked pods are not included in this type of peer.


                              Support: Core
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          pods:
                            description: |-
                              Pods defines a way to select a set of pods in
                              a set of namespaces. Note that host-networked pods
                              are not included in this type of peer.


                              Support: Core
                            properties:
                              namespaceSelector:
                                description: |-
                                  NamespaceSelector follows standard label selector semantics; if empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  PodSelector is used to explicitly select pods within a namespace; if empty,
                                  it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaceSelector
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        Name is an identifier for this rule, that may be no more than 100 characters
                        in length. This field should be used by the implementation to help
                        improve observability, readability and error-reporting for any applied
                        AdminNetworkPolicies.


                        Support: Core
                      maxLength: 100
                      type: string
                    ports:
                      description: |-
                        Ports allows for matching traffic based on port and protocols.
                        This field is a list of ports which should be matched on
                        the pods selected for this policy i.e the subject of the policy.
                        So it matches on the destination port for the ingress traffic.
                        If Ports is not set then the rule does not filter traffic via port.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyPort describes how to select network ports on pod(s).
                          Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: |-
                              NamedPort selects a port on a pod(s) based on name.


                              Support: Extended


                              <network-policy-api:experimental>
                            type: string
                          portNumber:
                            description: |-
                              Port selects a port on a pod(s) based on number.


                              Support: Core
                            properties:
                              port:
                                description: |-
                                  Number defines a network port value.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: |-
                              PortRange selects a port range on a pod(s) based on provided start and end
                              values.


                              Support: Core
                            properties:
                              end:
                                description: |-
                                  End defines a network port that is the end of a port range, the End value
                                  must be greater than Start.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                              start:
                                description: |-
                                  Start defines a network port that is the start of a port range, the Start
                                  value must be less than End.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                  required:
                  - action
                  - from
                  type: object
                maxItems: 100
                type: array
              priority:
                description: |-
                  Priority is a value from 0 to 1000. Rules with lower priority values have
                  higher precedence, and are checked before rules with higher priority values.
                  All AdminNetworkPolicy rules have higher precedence than NetworkPolicy or
                  BaselineAdminNetworkPolicy rules
                  The behavior is undefined if two ANP objects have same priority.


                  Support: Core
                format: int32
                maximum: 1000
                minimum: 0
                type: integer
              subject:
                description: |-
                  Subject defines the pods to which this AdminNetworkPolicy applies.
                  Note that host-networked pods are not included in subject selection.


                  Support: Core
                maxProperties: 1
                minProperties: 1
                properties:
                  namespaces:
                    description: Namespaces is used to select pods via namespace selectors.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  pods:
                    description: Pods is used to select pods via namespace AND pod
                      selectors.
                    properties:
                      namespaceSelector:
                        description: |-
                          NamespaceSelector follows standard label selector semantics; if empty,
                          it selects all Namespaces.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      podSelector:
                        description: |-
                          PodSelector is used to explicitly select pods within a namespace; if empty,
                          it selects all Pods.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - namespaceSelector
                    - podSelector
                    type: object
                type: object
            required:
            - priority
            - subject
            type: object
          status:
            description: Status is the status to be reported by the implementation.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            required:
            - conditions
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/network-policy-api/pull/30
    policy.networking.k8s.io/bundle-version: v0.1.1
    policy.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: baselineadminnetworkpolicies.policy.networking.k8s.io
spec:
  group: policy.networking.k8s.io
  names:
    kind: BaselineAdminNetworkPolicy
    listKind: BaselineAdminNetworkPolicyList
    plural: baselineadminnetworkpolicies
    shortNames:
    - banp
    singular: baselineadminnetworkpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          BaselineAdminNetworkPolicy is a cluster level resource that is part of the
          AdminNetworkPolicy API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of BaselineAdminNetworkPolicy.
            properties:
              egress:
                description: |-
                  Egress is the list of Egress rules to be applied to the selected pods if
                  they are not matched by any AdminNetworkPolicy or NetworkPolicy rules.
                  A total of 100 Egress rules will be allowed in each BANP instance.
                  The relative precedence of egress rules within a single BANP object
                  will be determined by the order in which the rule is written.
                  Thus, a rule that appears at the top of the egress rules
                  would take the highest precedence.
                  BANPs with no egress rules do not affect egress traffic.


                  Support: Core
                items:
                  description: |-
                    BaselineAdminNetworkPolicyEgressRule describes an action to take on a particular
                    set of traffic originating from pods selected by a BaselineAdminNetworkPolicy's
                    Subject field.
                    <network-policy-api:experimental:validation>
                  properties:
                    action:
                      description: |-
                        Action specifies the effect this rule will have on matching traffic.
                        Currently the following actions are supported:
                        Allow: allows the selected traffic
                        Deny: denies the selected traffic


                        Support: Core
                      enum:
                      - Allow
                      - Deny
                      type: string
                    name:
                      description: |-
                        Name is an identifier for this rule, that may be no more than 100 characters
                        in length. This field should be used by the implementation to help
                        improve observability, readability and error-reporting for any applied
                        BaselineAdminNetworkPolicies.


                        Support: Core
                      maxLength: 100
                      type: string
                    ports:
                      description: |-
                        Ports allows for matching traffic based on port and protocols.
                        This field is a list of destination ports for the outgoing egress traffic.
                        If Ports is not set then the rule does not filter traffic via port.
                      items:
                        description: |-
                          AdminNetworkPolicyPort describes how to select network ports on pod(s).
                          Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: |-
                              NamedPort selects a port on a pod(s) based on name.


                              Support: Extended


                              <network-policy-api:experimental>
                            type: string
                          portNumber:
                            description: |-
                              Port selects a port on a pod(s) based on number.


                              Support: Core
                            properties:
                              port:
                                description: |-
                                  Number defines a network port value.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: |-
                              PortRange selects a port range on a pod(s) based on provided start and end
                              values.


                              Support: Core
                            properties:
                              end:
                                description: |-
                                  End defines a network port that is the end of a port range, the End value
                                  must be greater than Start.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                              start:
                                description: |-
                                  Start defines a network port that is the start of a port range, the Start
                                  value must be less than End.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                    to:
                      description: |-
                        To is the list of destinations whose traffic this rule applies to.
                        If any AdminNetworkPolicyEgressPeer matches the destination of outgoing
                        traffic then the specified action is applied.
                        This field must be defined and contain at least one item.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyEgressPeer defines a peer to allow traffic to.
                          Exactly one of the selector pointers must be set for a given peer. If a
                          consumer observes none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: |-
                              Namespaces defines a way to select all pods within a set of Namespaces.
                              Note that host-networked pods are not included in this type of peer.


                              Support: Core
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          networks:
                            description: |-
                              Networks defines a way to select peers via CIDR blocks.
                              This is intended for representing entities that live outside the cluster,
                              which can't be selected by pods, namespaces and nodes peers, but note
                              that cluster-internal traffic will be checked against the rule as
                              well. So if you Allow or Deny traffic to `"0.0.0.0/0"`, that will allow
                              or deny all IPv4 pod-to-pod traffic as well. If you don't want that,
                              add a rule that Passes all pod traffic before the Networks rule.


                              Each item in Networks should be provided in the CIDR format and should be
                              IPv4 or IPv6, for example "10.0.0.0/8" or "fd00::/8".


                              Networks can have upto 25 CIDRs specified.


                              Support: Extended


                              <network-policy-api:experimental>
                            items:
                              description: |-
                                CIDR is an IP address range in CIDR notation (for example, "10.0.0.0/8" or "fd00::/8").
                                This string must be validated by implementations using net.ParseCIDR
                                TODO: Introduce CEL CIDR validation regex isCIDR() in Kube 1.31 when it is available.
                              maxLength: 43
                              type: string
                              x-kubernetes-validations:
                              - message: CIDR must be either an IPv4 or IPv6 address.
                                  IPv4 address embedded in IPv6 addresses are not
                                  supported
                                rule: self.contains(':') != self.contains('.')
                            maxItems: 25
                            minItems: 1
                            type: array
                            x-kubernetes-list-type: set
                          nodes:
                            description: |-
                              Nodes defines a way to select a set of nodes in
                              the cluster. This field follows standard label selector
                              semantics; if present but empty, it selects all Nodes.


                              Support: Extended


                              <network-policy-api:experimental>
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          pods:
                            description: |-
                              Pods defines a way to select a set of pods in
                              a set of namespaces. Note that host-networked pods
                              are not included in this type of peer.


                              Support: Core
                            properties:
                              namespaceSelector:
                                description: |-
                                  NamespaceSelector follows standard label selector semantics; if empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  PodSelector is used to explicitly select pods within a namespace; if empty,
                                  it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaceSelector
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                  required:
                  - action
                  - to
                  type: object
                  x-kubernetes-validations:
                  - message: networks/nodes peer cannot be set with namedPorts since
                      there are no namedPorts for networks/nodes
                    rule: '!(self.to.exists(peer, has(peer.networks) || has(peer.nodes))
                      && has(self.ports) && self.ports.exists(port, has(port.namedPort)))'
                maxItems: 100
                type: array
              ingress:
                description: |-
                  Ingress is the list of Ingress rules to be applied to the selected pods
                  if they are not matched by any AdminNetworkPolicy or NetworkPolicy rules.
                  A total of 100 Ingress rules will be allowed in each BANP instance.
                  The relative precedence of ingress rules within a single BANP object
                  will be determined by the order in which the rule is written.
                  Thus, a rule that appears at the top of the ingress rules
                  would take the highest precedence.
                  BANPs with no ingress rules do not affect ingress traffic.


                  Support: Core
                items:
                  description: |-
                    BaselineAdminNetworkPolicyIngressRule describes an action to take on a particular
                    set of traffic destined for pods selected by a BaselineAdminNetworkPolicy's
                    Subject field.
                  properties:
                    action:
                      description: |-
                        Action specifies the effect this rule will have on matching traffic.
                        Currently the following actions are supported:
                        Allow: allows the selected traffic
                        Deny: denies the selected traffic


                        Support: Core
                      enum:
                      - Allow
                      - Deny
                      type: string
                    from:
                      description: |-
                        From is the list of sources whose traffic this rule applies to.
                        If any AdminNetworkPolicyIngressPeer matches the source of incoming
                        traffic then the specified action is applied.
                        This field must be defined and contain at least one item.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyIngressPeer defines an in-cluster peer to allow traffic from.
                          Exactly one of the selector pointers must be set for a given peer. If a
                          consumer observes none of its fields are set, they must assume an unknown
                          option has been specified and fail closed.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namespaces:
                            description: |-
                              Namespaces defines a way to select all pods within a set of Namespaces.
                              Note that host-networked pods are not included in this type of peer.


                              Support: Core
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          pods:
                            description: |-
                              Pods defines a way to select a set of pods in
                              a set of namespaces. Note that host-networked pods
                              are not included in this type of peer.


                              Support: Core
                            properties:
                              namespaceSelector:
                                description: |-
                                  NamespaceSelector follows standard label selector semantics; if empty,
                                  it selects all Namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  PodSelector is used to explicitly select pods within a namespace; if empty,
                                  it selects all Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - namespaceSelector
                            - podSelector
                            type: object
                        type: object
                      maxItems: 100
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        Name is an identifier for this rule, that may be no more than 100 characters
                        in length. This field should be used by the implementation to help
                        improve observability, readability and error-reporting for any applied
                        BaselineAdminNetworkPolicies.


                        Support: Core
                      maxLength: 100
                      type: string
                    ports:
                      description: |-
                        Ports allows for matching traffic based on port and protocols.
                        This field is a list of ports which should be matched on
                        the pods selected for this policy i.e the subject of the policy.
                        So it matches on the destination port for the ingress traffic.
                        If Ports is not set then the rule does not filter traffic via port.


                        Support: Core
                      items:
                        description: |-
                          AdminNetworkPolicyPort describes how to select network ports on pod(s).
                          Exactly one field must be set.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          namedPort:
                            description: |-
                              NamedPort selects a port on a pod(s) based on name.


                              Support: Extended


                              <network-policy-api:experimental>
                            type: string
                          portNumber:
                            description: |-
                              Port selects a port on a pod(s) based on number.


                              Support: Core
                            properties:
                              port:
                                description: |-
                                  Number defines a network port value.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          portRange:
                            description: |-
                              PortRange selects a port range on a pod(s) based on provided start and end
                              values.


                              Support: Core
                            properties:
                              end:
                                description: |-
                                  End defines a network port that is the end of a port range, the End value
                                  must be greater than Start.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the network protocol (TCP, UDP, or SCTP) which traffic must
                                  match. If not specified, this field defaults to TCP.


                                  Support: Core
                                type: string
                              start:
                                description: |-
                                  Start defines a network port that is the start of a port range, the Start
                                  value must be less than End.


                                  Support: Core
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                        type: object
                      maxItems: 100
                      type: array
                  required:
                  - action
                  - from
                  type: object
                maxItems: 100
                type: array
              subject:
                description: |-
                  Subject defines the pods to which this BaselineAdminNetworkPolicy applies.
                  Note that host-networked pods are not included in subject selection.


                  Support: Core
                maxProperties: 1
                minProperties: 1
                properties:
                  namespaces:
                    description: Namespaces is used to select pods via namespace selectors.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  pods:
                    description: Pods is used to select pods via namespace AND pod
                      selectors.
                    properties:
                      namespaceSelector:
                        description: |-
                          NamespaceSelector follows standard label selector semantics; if empty,
                          it selects all Namespaces.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      podSelector:
                        description: |-
                          PodSelector is used to explicitly select pods within a namespace; if empty,
                          it selects all Pods.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - namespaceSelector
                    - podSelector
                    type: object
                type: object
            required:
            - subject
            type: object
          status:
            description: Status is the status to be reported by the implementation.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            required:
            - conditions
            type: object
        required:
        - metadata
        - spec
        type: object
        x-kubernetes-validations:
        - message: Only one baseline admin network policy with metadata.name="default"
            can be created in the cluster
          rule: self.metadata.name == 'default'
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: multi-networkpolicies.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  scope: Namespaced
  names:
    plural: multi-networkpolicies
    singular: multi-networkpolicy
    kind: MultiNetworkPolicy
    shortNames:
    - multi-policy
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: "MultiNetworkPolicy is a CRD schema to provide NetworkPolicy
            mechanism for net-attach-def which is specified by the Network Plumbing
            Working Group. MultiNetworkPolicy is identical to Kubernetes NetworkPolicy,
            See: https://kubernetes.io/docs/concepts/services-networking/network-policies/ ."
          properties:
            spec:
              description: 'Specification of the desired behavior for this MultiNetworkPolicy.'
              properties:
                egress:
                  description: "List of egress rules to be applied to the selected pods.
                    Outgoing traffic is allowed if there are no NetworkPolicies selecting
                    the pod (and cluster policy otherwise allows the traffic), OR if the
                    traffic matches at least one egress rule across all of the NetworkPolicy
                    objects whose podSelector matches the pod. If this field is empty
                    then this NetworkPolicy limits all outgoing traffic (and serves solely
                    to ensure that the pods it selects are isolated by default). This
                    field is beta-level in 1.8"
                  items:
                    description: "NetworkPolicyEgressRule describes a particular set of
                      traffic that is allowed out of pods matched by a NetworkPolicySpec's
                      podSelector. The traffic must match both ports and to. This type
                      is beta-level in 1.8"
                    properties:
                      ports:
                        description: "List of destination ports for outgoing traffic. Each
                          item in this list is combined using a logical OR. If this field
                          is empty or missing, this rule matches all ports (traffic not
                          restricted by port). If this field is present and contains at
                          least one item, then this rule allows traffic only if the traffic
                          matches at least one port in the list."
                        items:
                          description: "NetworkPolicyPort describes a port to allow traffic on"
                          properties:
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: "The port on the given protocol. This can either
                                be a numerical or named port on a pod. If this field is
                                not provided, this matches all port names and numbers."
                              x-kubernetes-int-or-string: true
                            endPort:
                              type: integer
                              format: int32
                              description: "If set, indicates that the range of ports from
                                port to endPort, inclusive, should be allowed by the policy.
                                This field cannot be defined if the port field is not
                                defined or if the port field is defined as a named (string)
                                port. The endPort must be equal or greater than port."
                            protocol:
                              description: "The protocol (TCP, UDP, or SCTP) which traffic
                                must match. If not specified, this field defaults to TCP."
                              type: string
                          type: object
                        type: array
                      to:
                        description: "List of destinations for outgoing traffic of pods
                          selected for this rule. Items in this list are combined using
                          a logical OR operation. If this field is empty or missing, this
                          rule matches all destinations (traffic not restricted by destination).
                          If this field is present and contains at least one item, this
                          rule allows traffic only if the traffic matches at least one
                          item in the to list."
                        items:
                          description: "NetworkPolicyPeer describes a peer to allow traffic
                        from. Only certain combinations of fields are allowed"
                          properties:
                            ipBlock:
                              description: "IPBlock defines policy on a particular IPBlock.
                                If this field is set then neither of the other fields
                                can be."
                              properties:
                                cidr:
                                  description: "CIDR is a string representing the IP Block
                                    Valid examples are '192.168.1.1/24'"
                                  type: string
                                except:
                                  description: "Except is a slice of CIDRs that should
                                    not be included within an IP Block Valid examples
                                    are '192.168.1.1/24' Except values will be rejected
                                    if they are outside the CIDR range"
                                  items:
                                    type: string
                                  type: array
                              required:
                              - cidr
                              type: object
                            namespaceSelector:
                              description: "Selects Namespaces using cluster-scoped labels.
                                This field follows standard label selector semantics;
                                if present but empty, it selects all namespaces. \n If
                                PodSelector is also set, then the NetworkPolicyPeer as
                                a whole selects the Pods matching PodSelector in the Namespaces
                                selected by NamespaceSelector. Otherwise it selects all
                                Pods in the Namespaces selected by NamespaceSelector."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector
                                          applies to."
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist."
                                        type: string
                                      values:
                                        description: "values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists
                                          or DoesNotExist, the values array must be empty.
                                          This array is replaced during a strategic merge
                                          patch."
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is 'key', the operator is 'In', and the values array
                                    contains only 'value'. The requirements are ANDed."
                                  type: object
                              type: object
                            podSelector:
                              description: "This is a label selector which selects Pods.
                                This field follows standard label selector semantics;
                                if present but empty, it selects all pods. \n If NamespaceSelector
                                is also set, then the NetworkPolicyPeer as a whole selects
                                the Pods matching PodSelector in the Namespaces selected
                                by NamespaceSelector. Otherwise it selects the Pods matching
                                PodSelector in the policy's own Namespace."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values."
                                    properties:
                                      key:
                                        description: key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist."
                                        type: string
                                      values:
                                        description: "values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists
                                          or DoesNotExist, the values array must be empty.
                                          This array is replaced during a strategic merge
                                          patch."
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is 'key', the operator is 'In', and the values array
                                    contains only 'value'. The requirements are ANDed."
                                  type: object
                              type: object
                          type: object
                        type: array
                    type: object
                  type: array
                ingress:
                  description: "List of ingress rules to be applied to the selected pods.
                    Traffic is allowed to a pod if there are no NetworkPolicies selecting
                    the pod (and cluster policy otherwise allows the traffic), OR if the
                    traffic source is the pod's local node, OR if the traffic matches
                    at least one ingress rule across all of the NetworkPolicy objects
                    whose podSelector matches the pod. If this field is empty then this
                    NetworkPolicy does not allow any traffic (and serves solely to ensure
                    that the pods it selects are isolated by default)"
                  items:
                    description: "NetworkPolicyIngressRule describes a particular set of
                      traffic that is allowed to the pods matched by a NetworkPolicySpec's
                      podSelector. The traffic must match both ports and from."
                    properties:
                      from:
                        description: "List of sources which should be able to access the
                          pods selected for this rule. Items in this list are combined
                          using a logical OR operation. If this field is empty or missing,
                          this rule matches all sources (traffic not restricted by source).
                          If this field is present and contains at least one item, this
                          rule allows traffic only if the traffic matches at least one
                          item in the from list."
                        items:
                          description: NetworkPolicyPeer describes a peer to allow traffic
                            from. Only certain combinations of fields are allowed
                          properties:
                            ipBlock:
                              description: "IPBlock defines policy on a particular IPBlock.
                                If this field is set then neither of the other fields
                                can be."
                              properties:
                                cidr:
                                  description: "CIDR is a string representing the IP Block
                                    Valid examples are '192.168.1.1/24'"
                                  type: string
                                except:
                                  description: "Except is a slice of CIDRs that should
                                    not be included within an IP Block Valid examples
                                    are '192.168.1.1/24' Except values will be rejected
                                    if they are outside the CIDR range"
                                  items:
                                    type: string
                                  type: array
                              required:
                              - cidr
                              type: object
                            namespaceSelector:
                              description: "Selects Namespaces using cluster-scoped labels.
                                This field follows standard label selector semantics;
                                if present but empty, it selects all namespaces. \n If
                                PodSelector is also set, then the NetworkPolicyPeer as
                                a whole selects the Pods matching PodSelector in the Namespaces
                                selected by NamespaceSelector. Otherwise it selects all
                                Pods in the Namespaces selected by NamespaceSelector."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector
                                          applies to."
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist."
                                        type: string
                                      values:
                                        description: "values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists
                                          or DoesNotExist, the values array must be empty.
                                          This array is replaced during a strategic merge
                                          patch."
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is 'key', the operator is 'In', and the values array
                                    contains only 'value'. The requirements are ANDed."
                                  type: object
                              type: object
                            podSelector:
                              description: "This is a label selector which selects Pods.
                                This field follows standard label selector semantics;
                                if present but empty, it selects all pods. \n If NamespaceSelector
                                is also set, then the NetworkPolicyPeer as a whole selects
                                the Pods matching PodSelector in the Namespaces selected
                                by NamespaceSelector. Otherwise it selects the Pods matching
                                PodSelector in the policy's own Namespace."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector
                                          applies to."
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist."
                                        type: string
                                      values:
                                        description: "values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists
                                          or DoesNotExist, the values array must be empty.
                                          This array is replaced during a strategic merge
                                          patch."
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is 'key', the operator is 'In', and the values array
                                    contains only 'value'. The requirements are ANDed."
                                  type: object
                              type: object
                          type: object
                        type: array
                      ports:
                        description: "List of ports which should be made accessible on
                          the pods selected for this rule. Each item in this list is combined
                          using a logical OR. If this field is empty or missing, this
                          rule matches all ports (traffic not restricted by port). If
                          this field is present and contains at least one item, then this
                          rule allows traffic only if the traffic matches at least one
                          port in the list."
                        items:
                          description: NetworkPolicyPort describes a port to allow traffic
                            on
                          properties:
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: "The port on the given protocol. This can either
                                be a numerical or named port on a pod. If this field is
                                not provided, this matches all port names and numbers."
                              x-kubernetes-int-or-string: true
                            endPort:
                              type: integer
                              format: int32
                              description: "If set, indicates that the range of ports from
                                port to endPort, inclusive, should be allowed by the policy.
                                This field cannot be defined if the port field is not
                                defined or if the port field is defined as a named (string)
                                port. The endPort must be equal or greater than port."
                            protocol:
                              description: "The protocol (TCP, UDP, or SCTP) which traffic
                                must match. If not specified, this field defaults to TCP."
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                podSelector:
                  description: "This is a label selector which selects Pods.
                    This field follows standard label selector semantics;
                    if present but empty, it selects all pods. \n If NamespaceSelector
                    is also set, then the NetworkPolicyPeer as a whole selects
                    the Pods matching PodSelector in the Namespaces selected
                    by NamespaceSelector. Otherwise it selects the Pods matching
                    PodSelector in the policy's own Namespace."
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector
                        requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector
                          that contains values, a key, and an operator that
                          relates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: string
                          operator:
                            description: "operator represents a key's relationship
                              to a set of values. Valid operators are In,
                              NotIn, Exists and DoesNotExist."
                            type: string
                          values:
                            description: "values is an array of string values.
                              If the operator is In or NotIn, the values array
                              must be non-empty. If the operator is Exists
                              or DoesNotExist, the values array must be empty.
                              This array is replaced during a strategic merge
                              patch."
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                        description: "matchLabels is a map of {key,value} pairs.
                          A single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field
                          is 'key', the operator is 'In', and the values array
                          contains only 'value'. The requirements are ANDed."
                      type: object
                  type: object
                policyTypes:
                  description: "List of rule types that the NetworkPolicy relates to. Valid
                    options are 'Ingress', 'Egress', or 'Ingress,Egress'. If this field
                    is not specified, it will default based on the existence of Ingress
                    or Egress rules; policies that contain an Egress section are assumed
                    to affect Egress, and all policies (whether or not they contain an
                    Ingress section) are assumed to affect Ingress. If you want to write
                    an egress-only policy, you must explicitly specify policyTypes [ 'Egress'
                    ]. Likewise, if you want to write a policy that specifies that no
                    egress is allowed, you must specify a policyTypes value that include
                    'Egress' (since such a policy would not include an Egress section
                    and would otherwise default to just [ 'Ingress' ]). This field is
                    beta-level in 1.8"
                  items:
                    description: "Policy Type string describes the NetworkPolicy type This
                      type is beta-level in 1.8"
                    type: string
                  type: array
              required:
              - podSelector
              type: object
          type: object
    - name: v1beta2
      served: false
      storage: false
      schema:
        openAPIV3Schema:
          description: "MultiNetworkPolicy is a CRD schema to provide NetworkPolicy
            mechanism for net-attach-def which is specified by the Network Plumbing
            Working Group. MultiNetworkPolicy is identical to Kubernetes NetworkPolicy,
            See: https://kubernetes.io/docs/concepts/services-networking/network-policies/ ."
          properties:
            spec:
              description: 'Specification of the desired behavior for this MultiNetworkPolicy.'
              properties:
                egress:
                  description: "List of egress rules to be applied to the selected pods.
                    Outgoing traffic is allowed if there are no NetworkPolicies selecting
                    the pod (and cluster policy otherwise allows the traffic), OR if the
                    traffic matches at least one egress rule across all of the NetworkPolicy
                    objects whose podSelector matches the pod. If this field is empty
                    then this NetworkPolicy limits all outgoing traffic (and serves solely
                    to ensure that the pods it selects are isolated by default). This
                    field is beta-level in 1.8"
                  items:
                    description: "NetworkPolicyEgressRule describes a particular set of
                      traffic that is allowed out of pods matched by a NetworkPolicySpec's
                      podSelector. The traffic must match both ports and to. This type
                      is beta-level in 1.8"
                    properties:
                      ports:
                        description: "List of destination ports for outgoing traffic. Each
                          item in this list is combined using a logical OR. If this field
                          is empty or missing, this rule matches all ports (traffic not
                          restricted by port). If this field is present and contains at
                          least one item, then this rule allows traffic only if the traffic
                          matches at least one port in the list."
                        items:
                          description: "NetworkPolicyPort describes a port to allow traffic on"
                          properties:
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: "The port on the given protocol. This can either
                                be a numerical or named port on a pod. If this field is
                                not provided, this matches all port names and numbers."
                              x-kubernetes-int-or-string: true
                            endPort:
                              type: integer
                              format: int32
                              description: "If set, indicates that the range of ports from
                                port to endPort, inclusive, should be allowed by the policy.
                                This field cannot be defined if the port field is not
                                defined or if the port field is defined as a named (string)
                                port. The endPort must be equal or greater than port."
                            protocol:
                              description: "The protocol (TCP, UDP, or SCTP) which traffic
                                must match. If not specified, this field defaults to TCP."
                              type: string
                          type: object
                        type: array
                      to:
                        description: "List of destinations for outgoing traffic of pods
                          selected for this rule. Items in this list are combined using
                          a logical OR operation. If this field is empty or missing, this
                          rule matches all destinations (traffic not restricted by destination).
                          If this field is present and contains at least one item, this
                          rule allows traffic only if the traffic matches at least one
                          item in the to list."
                        items:
                          description: "NetworkPolicyPeer describes a peer to allow traffic
                        from. Only certain combinations of fields are allowed"
                          properties:
                            ipBlock:
                              description: "IPBlock defines policy on a particular IPBlock.
                                If this field is set then neither of the other fields
                                can be."
                              properties:
                                cidr:
                                  description: "CIDR is a string representing the IP Block
                                    Valid examples are '192.168.1.1/24'"
                                  type: string
                                except:
                                  description: "Except is a slice of CIDRs that should
                                    not be included within an IP Block Valid examples
                                    are '192.168.1.1/24' Except values will be rejected
                                    if they are outside the CIDR range"
                                  items:
                                    type: string
                                  type: array
                              required:
                              - cidr
                              type: object
                            namespaceSelector:
                              description: "Selects Namespaces using cluster-scoped labels.
                                This field follows standard label selector semantics;
                                if present but empty, it selects all namespaces. \n If
                                PodSelector is also set, then the NetworkPolicyPeer as
                                a whole selects the Pods matching PodSelector in the Namespaces
                                selected by NamespaceSelector. Otherwise it selects all
                                Pods in the Namespaces selected by NamespaceSelector."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector
                                          applies to."
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist."
                                        type: string
                                      values:
                                        description: "values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists
                                          or DoesNotExist, the values array must be empty.
                                          This array is replaced during a strategic merge
                                          patch."
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is 'key', the operator is 'In', and the values array
                                    contains only 'value'. The requirements are ANDed."
                                  type: object
                              type: object
                            podSelector:
                              description: "This is a label selector which selects Pods.
                                This field follows standard label selector semantics;
                                if present but empty, it selects all pods. \n If NamespaceSelector
                                is also set, then the NetworkPolicyPeer as a whole selects
                                the Pods matching PodSelector in the Namespaces selected
                                by NamespaceSelector. Otherwise it selects the Pods matching
                                PodSelector in the policy's own Namespace."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values."
                                    properties:
                                      key:
                                        description: key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist."
                                        type: string
                                      values:
                                        description: "values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists
                                          or DoesNotExist, the values array must be empty.
                                          This array is replaced during a strategic merge
                                          patch."
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is 'key', the operator is 'In', and the values array
                                    contains only 'value'. The requirements are ANDed."
                                  type: object
                              type: object
                          type: object
                        type: array
                    type: object
                  type: array
                ingress:
                  description: "List of ingress rules to be applied to the selected pods.
                    Traffic is allowed to a pod if there are no NetworkPolicies selecting
                    the pod (and cluster policy otherwise allows the traffic), OR if the
                    traffic source is the pod's local node, OR if the traffic matches
                    at least one ingress rule across all of the NetworkPolicy objects
                    whose podSelector matches the pod. If this field is empty then this
                    NetworkPolicy does not allow any traffic (and serves solely to ensure
                    that the pods it selects are isolated by default)"
                  items:
                    description: "NetworkPolicyIngressRule describes a particular set of
                      traffic that is allowed to the pods matched by a NetworkPolicySpec's
                      podSelector. The traffic must match both ports and from."
                    properties:
                      from:
                        description: "List of sources which should be able to access the
                          pods selected for this rule. Items in this list are combined
                          using a logical OR operation. If this field is empty or missing,
                          this rule matches all sources (traffic not restricted by source).
                          If this field is present and contains at least one item, this
                          rule allows traffic only if the traffic matches at least one
                          item in the from list."
                        items:
                          description: NetworkPolicyPeer describes a peer to allow traffic
                            from. Only certain combinations of fields are allowed
                          properties:
                            ipBlock:
                              description: "IPBlock defines policy on a particular IPBlock.
                                If this field is set then neither of the other fields
                                can be."
                              properties:
                                cidr:
                                  description: "CIDR is a string representing the IP Block
                                    Valid examples are '192.168.1.1/24'"
                                  type: string
                                except:
                                  description: "Except is a slice of CIDRs that should
                                    not be included within an IP Block Valid examples
                                    are '192.168.1.1/24' Except values will be rejected
                                    if they are outside the CIDR range"
                                  items:
                                    type: string
                                  type: array
                              required:
                              - cidr
                              type: object
                            namespaceSelector:
                              description: "Selects Namespaces using cluster-scoped labels.
                                This field follows standard label selector semantics;
                                if present but empty, it selects all namespaces. \n If
                                PodSelector is also set, then the NetworkPolicyPeer as
                                a whole selects the Pods matching PodSelector in the Namespaces
                                selected by NamespaceSelector. Otherwise it selects all
                                Pods in the Namespaces selected by NamespaceSelector."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector
                                          applies to."
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist."
                                        type: string
                                      values:
                                        description: "values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists
                                          or DoesNotExist, the values array must be empty.
                                          This array is replaced during a strategic merge
                                          patch."
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is 'key', the operator is 'In', and the values array
                                    contains only 'value'. The requirements are ANDed."
                                  type: object
                              type: object
                            podSelector:
                              description: "This is a label selector which selects Pods.
                                This field follows standard label selector semantics;
                                if present but empty, it selects all pods. \n If NamespaceSelector
                                is also set, then the NetworkPolicyPeer as a whole selects
                                the Pods matching PodSelector in the Namespaces selected
                                by NamespaceSelector. Otherwise it selects the Pods matching
                                PodSelector in the policy's own Namespace."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector
                                          applies to."
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist."
                                        type: string
                                      values:
                                        description: "values is an array of string values.
                                          If the operator is In or NotIn, the values array
                                          must be non-empty. If the operator is Exists
                                          or DoesNotExist, the values array must be empty.
                                          This array is replaced during a strategic merge
                                          patch."
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is 'key', the operator is 'In', and the values array
                                    contains only 'value'. The requirements are ANDed."
                                  type: object
                              type: object
                          type: object
                        type: array
                      ports:
                        description: "List of ports which should be made accessible on
                          the pods selected for this rule. Each item in this list is combined
                          using a logical OR. If this field is empty or missing, this
                          rule matches all ports (traffic not restricted by port). If
                          this field is present and contains at least one item, then this
                          rule allows traffic only if the traffic matches at least one
                          port in the list."
                        items:
                          description: NetworkPolicyPort describes a port to allow traffic
                            on
                          properties:
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: "The port on the given protocol. This can either
                                be a numerical or named port on a pod. If this field is
                                not provided, this matches all port names and numbers."
                              x-kubernetes-int-or-string: true
                            endPort:
                              type: integer
                              format: int32
                              description: "If set, indicates that the range of ports from
                                port to endPort, inclusive, should be allowed by the policy.
                                This field cannot be defined if the port field is not
                                defined or if the port field is defined as a named (string)
                                port. The endPort must be equal or greater than port."
                            protocol:
                              description: "The protocol (TCP, UDP, or SCTP) which traffic
                                must match. If not specified, this field defaults to TCP."
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                podSelector:
                  description: "This is a label selector which selects Pods.
                    This field follows standard label selector semantics;
                    if present but empty, it selects all pods. \n If NamespaceSelector
                    is also set, then the NetworkPolicyPeer as a whole selects
                    the Pods matching PodSelector in the Namespaces selected
                    by NamespaceSelector. Otherwise it selects the Pods matching
                    PodSelector in the policy's own Namespace."
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector
                        requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector
                          that contains values, a key, and an operator that
                          relates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: string
                          operator:
                            description: "operator represents a key's relationship
                              to a set of values. Valid operators are In,
                              NotIn, Exists and DoesNotExist."
                            type: string
                          values:
                            description: "values is an array of string values.
                              If the operator is In or NotIn, the values array
                              must be non-empty. If the operator is Exists
                              or DoesNotExist, the values array must be empty.
                              This array is replaced during a strategic merge
                              patch."
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                        description: "matchLabels is a map of {key,value} pairs.
                          A single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field
                          is 'key', the operator is 'In', and the values array
                          contains only 'value'. The requirements are ANDed."
                      type: object
                  type: object
                policyTypes:
                  description: "List of rule types that the NetworkPolicy relates to. Valid
                    options are 'Ingress', 'Egress', or 'Ingress,Egress'. If this field
                    is not specified, it will default based on the existence of Ingress
                    or Egress rules; policies that contain an Egress section are assumed
                    to affect Egress, and all policies (whether or not they contain an
                    Ingress section) are assumed to affect Ingress. If you want to write
                    an egress-only policy, you must explicitly specify policyTypes [ 'Egress'
                    ]. Likewise, if you want to write a policy that specifies that no
                    egress is allowed, you must specify a policyTypes value that include
                    'Egress' (since such a policy would not include an Egress section
                    and would otherwise default to just [ 'Ingress' ]). This field is
                    beta-level in 1.8"
                  items:
                    description: "Policy Type string describes the NetworkPolicy type This
                      type is beta-level in 1.8"
                    type: string
                  type: array
              required:
              - podSelector
              type: object
          type: object
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: multi-networkpolicy
rules:
  - apiGroups: ["k8s.cni.cncf.io"]
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - list
      - watch
      - get
  # Watch for changes to Kubernetes NetworkPolicies.
  - apiGroups: ["networking.k8s.io"]
    resources:
      - networkpolicies
    verbs:
      - watch
      - list
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: multi-networkpolicy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multi-networkpolicy
subjects:
- kind: ServiceAccount
  name: multi-networkpolicy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: multi-networkpolicy
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: multi-networkpolicy-custom-v4-rules
  namespace: kube-system
  labels:
    tier: node
    app: multi-networkpolicy
data:
  custom-v4-rules.txt: |
    # accept redirect
    -p icmp --icmp-type redirect -j ACCEPT
    # accept fragmentation-needed (for MTU discovery)
    -p icmp --icmp-type fragmentation-needed -j ACCEPT
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: multi-networkpolicy-custom-v6-rules
  namespace: kube-system
  labels:
    tier: node
    app: multi-networkpolicy
data:
  custom-v6-rules.txt: |
    # accept NDP
    -p icmpv6 --icmpv6-type neighbor-solicitation -j ACCEPT
    -p icmpv6 --icmpv6-type neighbor-advertisement -j ACCEPT
    # accept RA/RS
    -p icmpv6 --icmpv6-type router-solicitation -j ACCEPT
    -p icmpv6 --icmpv6-type router-advertisement -j ACCEPT
    # accept redirect
    -p icmpv6 --icmpv6-type redirect -j ACCEPT
    # accept packet-too-big (for MTU discovery)
    -p icmpv6 --icmpv6-type packet-too-big -j ACCEPT
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: multi-networkpolicy-ds-amd64
  namespace: kube-system
  labels:
    tier: node
    app: multi-networkpolicy
    name: multi-networkpolicy
spec:
  selector:
    matchLabels:
      name: multi-networkpolicy
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        app: multi-networkpolicy
        name: multi-networkpolicy
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: multi-networkpolicy
      containers:
      - name: multi-networkpolicy
        image: ghcr.io/k8snetworkplumbingwg/multi-networkpolicy-iptables:snapshot
        imagePullPolicy: Always
        command: ["/usr/bin/multi-networkpolicy-iptables"]
        args:
        - "--host-prefix=/host"
        # change this if runtime is different that crio default
        - "--container-runtime-endpoint=/run/containerd/containerd.sock"
        # uncomment this if you want to store iptables rules
        # - "--pod-iptables=/var/lib/multi-networkpolicy/iptables"
        # uncomment this if you need to accept link-local address traffic
        #- "--allow-ipv6-src-prefix=fe80::/10"
        #- "--allow-ipv6-dst-prefix=fe80::/10"
        # uncomment this if you need to add custom iptables rules defined above configmap
        #- "--custom-v4-ingress-rule-file=/etc/multi-networkpolicy/rules/custom-v4-rules.txt"
        #- "--custom-v4-egress-rule-file=/etc/multi-networkpolicy/rules/custom-v4-rules.txt"
        #- "--custom-v6-ingress-rule-file=/etc/multi-networkpolicy/rules/custom-v6-rules.txt"
        #- "--custom-v6-egress-rule-file=/etc/multi-networkpolicy/rules/custom-v6-rules.txt"
        # uncomment if you want to accept ICMP/ICMPv6 traffic
        #- "--accept-icmp"
        #- "--accept-icmpv6"
        resources:
          requests:
            cpu: "100m"
            memory: "80Mi"
          limits:
            cpu: "100m"
            memory: "150Mi"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN", "NET_ADMIN"]
        volumeMounts:
        - name: host
          mountPath: /host
        - name: var-lib-multinetworkpolicy
          mountPath: /var/lib/multi-networkpolicy
        - name: multi-networkpolicy-custom-rules
          mountPath: /etc/multi-networkpolicy/rules
          readOnly: true
      volumes:
        - name: host
          hostPath:
            path: /
        - name: var-lib-multinetworkpolicy
          hostPath:
            path: /var/lib/multi-networkpolicy
        - name: multi-networkpolicy-custom-rules
          projected:
            sources:
              - configMap:
                  name: multi-networkpolicy-custom-v4-rules
              - configMap:
                  name: multi-networkpolicy-custom-v6-rules
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressips.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressIP
    listKind: EgressIPList
    plural: egressips
    shortNames:
    - eip
    singular: egressip
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.egressIPs[*]
      name: EgressIPs
      type: string
    - jsonPath: .status.items[*].node
      name: Assigned Node
      type: string
    - jsonPath: .status.items[*].egressIP
      name: Assigned EgressIPs
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressIP is a CRD allowing the user to define a fixed
          source IP for all egress traffic originating from any pods which
          match the EgressIP resource according to its spec definition.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of EgressIP.
            properties:
              egressIPs:
                description: |-
                  EgressIPs is the list of egress IP addresses requested. Can be IPv4 and/or IPv6.
                  This field is mandatory.
                items:
                  type: string
                type: array
              namespaceSelector:
                description: |-
                  NamespaceSelector applies the egress IP only to the namespace(s) whose label
                  matches this definition. This field is mandatory.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              podSelector:
                description: |-
                  PodSelector applies the egress IP only to the pods whose label
                  matches this definition. This field is optional, and in case it is not set:
                  results in the egress IP being applied to all pods in the namespace(s)
                  matched by the NamespaceSelector. In case it is set: is intersected with
                  the NamespaceSelector, thus applying the egress IP to the pods
                  (in the namespace(s) already matched by the NamespaceSelector) which
                  match this pod selector.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - egressIPs
            - namespaceSelector
            type: object
          status:
            description: Observed status of EgressIP. Read-only.
            properties:
              items:
                description: The list of assigned egress IPs and their corresponding
                  node assignment.
                items:
                  description: The per node status, for those egress IPs who have
                    been assigned.
                  properties:
                    egressIP:
                      description: Assigned egress IP
                      type: string
                    node:
                      description: Assigned node name
                      type: string
                  required:
                  - egressIP
                  - node
                  type: object
                type: array
            required:
            - items
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressfirewalls.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressFirewall
    listKind: EgressFirewallList
    plural: egressfirewalls
    singular: egressfirewall
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: EgressFirewall Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressFirewall describes the current egress firewall for a Namespace.
          Traffic from a pod to an IP address outside the cluster will be checked against
          each EgressFirewallRule in the pod's namespace's EgressFirewall, in
          order. If no rule matches (or no EgressFirewall is present) then the traffic
          will be allowed by default.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
            properties:
              name:
                type: string
                pattern: ^default$
          spec:
            description: Specification of the desired behavior of EgressFirewall.
            properties:
              egress:
                description: a collection of egress firewall rule objects
                items:
                  description: EgressFirewallRule is a single egressfirewall rule
                    object
                  properties:
                    ports:
                      description: ports specify what ports and protocols the rule
                        applies to
                      items:
                        description: EgressFirewallPort specifies the port to allow
                          or deny traffic to
                        properties:
                          port:
                            description: port that the traffic must match
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          protocol:
                            description: protocol (tcp, udp, sctp) that the traffic
                              must match.
                            pattern: ^TCP|UDP|SCTP$
                            type: string
                        required:
                        - port
                        - protocol
                        type: object
                      type: array
                    to:
                      description: to is the target that traffic is allowed/denied
                        to
                      maxProperties: 1
                      minProperties: 1
                      properties:
                        cidrSelector:
                          description: cidrSelector is the CIDR range to allow/deny
                            traffic to. If this is set, dnsName and nodeSelector must
                            be unset.
                          type: string
                        dnsName:
                          description: |-
                            dnsName is the domain name to allow/deny traffic to. If this is set, cidrSelector and nodeSelector must be unset.
                            For a wildcard DNS name, the '*' will match only one label. Additionally, only a single '*' can be
                            used at the beginning of the wildcard DNS name. For example, '*.example.com' will match 'sub1.example.com'
                            but won't match 'sub2.sub1.example.com'.
                          pattern: ^(\*\.)?([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                          type: string
                        nodeSelector:
                          description: |-
                            nodeSelector will allow/deny traffic to the Kubernetes node IP of selected nodes. If this is set,
                            cidrSelector and DNSName must be unset.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type:
                      description: type marks this as an "Allow" or "Deny" rule
                      pattern: ^Allow|Deny$
                      type: string
                  required:
                  - to
                  - type
                  type: object
                type: array
            required:
            - egress
            type: object
          status:
            description: Observed status of EgressFirewall
            properties:
              messages:
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              status:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressservices.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressService
    listKind: EgressServiceList
    plural: egressservices
    singular: egressservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.host
      name: Assigned Host
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressService is a CRD that allows the user to request that the source
          IP of egress packets originating from all of the pods that are endpoints
          of the corresponding LoadBalancer Service would be its ingress IP.
          In addition, it allows the user to request that egress packets originating from
          all of the pods that are endpoints of the LoadBalancer service would use a different
          network than the main one.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EgressServiceSpec defines the desired state of EgressService
            properties:
              network:
                description: |-
                  The network which this service should send egress and corresponding ingress replies to.
                  This is typically implemented as VRF mapping, representing a numeric id or string name
                  of a routing table which by omission uses the default host routing.
                type: string
              nodeSelector:
                description: |-
                  Allows limiting the nodes that can be selected to handle the service's traffic when sourceIPBy=LoadBalancerIP.
                  When present only a node whose labels match the specified selectors can be selected
                  for handling the service's traffic.
                  When it is not specified any node in the cluster can be chosen to manage the service's traffic.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              sourceIPBy:
                description: |-
                  Determines the source IP of egress traffic originating from the pods backing the LoadBalancer Service.
                  When `LoadBalancerIP` the source IP is set to its LoadBalancer ingress IP.
                  When `Network` the source IP is set according to the interface of the Network,
                  leveraging the masquerade rules that are already in place.
                  Typically these rules specify SNAT to the IP of the outgoing interface,
                  which means the packet will typically leave with the IP of the node.
                enum:
                - LoadBalancerIP
                - Network
                type: string
            type: object
          status:
            description: EgressServiceStatus defines the observed state of EgressService
            properties:
              host:
                description: |-
                  The name of the node selected to handle the service's traffic.
                  In case sourceIPBy=Network the field will be set to "ALL".
                type: string
            required:
            - host
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressqoses.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressQoS
    listKind: EgressQoSList
    plural: egressqoses
    singular: egressqos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressQoS is a CRD that allows the user to define a DSCP value
          for pods egress traffic on its namespace to specified CIDRs.
          Traffic from these pods will be checked against each EgressQoSRule in
          the namespace's EgressQoS, and if there is a match the traffic is marked
          with the relevant DSCP value.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
            properties:
              name:
                type: string
                pattern: ^default$
          spec:
            description: EgressQoSSpec defines the desired state of EgressQoS
            properties:
              egress:
                description: a collection of Egress QoS rule objects
                items:
                  properties:
                    dscp:
                      description: DSCP marking value for matching pods' traffic.
                      maximum: 63
                      minimum: 0
                      type: integer
                    dstCIDR:
                      description: |-
                        DstCIDR specifies the destination's CIDR. Only traffic heading
                        to this CIDR will be marked with the DSCP value.
                        This field is optional, and in case it is not set the rule is applied
                        to all egress traffic regardless of the destination.
                      format: cidr
                      type: string
                    podSelector:
                      description: |-
                        PodSelector applies the QoS rule only to the pods in the namespace whose label
                        matches this definition. This field is optional, and in case it is not set
                        results in the rule being applied to all pods in the namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - dscp
                  type: object
                type: array
            required:
            - egress
            type: object
          status:
            description: EgressQoSStatus defines the observed state of EgressQoS
            properties:
              conditions:
                description: An array of condition objects indicating details about
                  status of EgressQoS object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: A concise indication of whether the EgressQoS resource
                  is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: adminpolicybasedexternalroutes.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: AdminPolicyBasedExternalRoute
    listKind: AdminPolicyBasedExternalRouteList
    plural: adminpolicybasedexternalroutes
    shortNames:
    - apbexternalroute
    singular: adminpolicybasedexternalroute
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.lastTransitionTime
      name: Last Update
      type: date
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          AdminPolicyBasedExternalRoute is a CRD allowing the cluster administrators to configure policies for external gateway IPs to be applied to all the pods contained in selected namespaces.
          Egress traffic from the pods that belong to the selected namespaces to outside the cluster is routed through these external gateway IPs.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AdminPolicyBasedExternalRouteSpec defines the desired state
              of AdminPolicyBasedExternalRoute
            properties:
              from:
                description: From defines the selectors that will determine the target
                  namespaces to this CR.
                properties:
                  namespaceSelector:
                    description: NamespaceSelector defines a selector to be used to
                      determine which namespaces will be targeted by this CR
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - namespaceSelector
                type: object
              nextHops:
                description: 'NextHops defines two types of hops: Static and Dynamic.
                  Each hop defines at least one external gateway IP.'
                minProperties: 1
                properties:
                  dynamic:
                    description: DynamicHops defines a slices of DynamicHop. This
                      field is optional.
                    items:
                      description: |-
                        DynamicHop defines the configuration for a dynamic external gateway interface.
                        These interfaces are wrapped around a pod object that resides inside the cluster.
                        The field NetworkAttachmentName captures the name of the multus network name to use when retrieving the gateway IP to use.
                        The PodSelector and the NamespaceSelector are mandatory fields.
                      properties:
                        bfdEnabled:
                          default: false
                          description: BFDEnabled determines if the interface implements
                            the Bidirectional Forward Detection protocol. Defaults
                            to false.
                          type: boolean
                        namespaceSelector:
                          description: NamespaceSelector defines a selector to filter
                            the namespaces where the pod gateways are located.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkAttachmentName:
                          default: ""
                          description: |-
                            NetworkAttachmentName determines the multus network name to use when retrieving the pod IPs that will be used as the gateway IP.
                            When this field is empty, the logic assumes that the pod is configured with HostNetwork and is using the node's IP as gateway.
                          type: string
                        podSelector:
                          description: PodSelector defines the selector to filter
                            the pods that are external gateways.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - podSelector
                      type: object
                    type: array
                  static:
                    description: StaticHops defines a slice of StaticHop. This field
                      is optional.
                    items:
                      description: StaticHop defines the configuration of a static
                        IP that acts as an external Gateway Interface. IP field is
                        mandatory.
                      properties:
                        bfdEnabled:
                          default: false
                          description: BFDEnabled determines if the interface implements
                            the Bidirectional Forward Detection protocol. Defaults
                            to false.
                          type: boolean
                        ip:
                          description: IP defines the static IP to be used for egress
                            traffic. The IP can be either IPv4 or IPv6.
                          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                type: object
            required:
            - from
            - nextHops
            type: object
          status:
            description: AdminPolicyBasedRouteStatus contains the observed status
              of the AdminPolicyBased route types.
            properties:
              lastTransitionTime:
                description: Captures the time when the last change was applied.
                format: date-time
                type: string
              messages:
                description: An array of Human-readable messages indicating details
                  about the status of the object.
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              status:
                description: A concise indication of whether the AdminPolicyBasedRoute
                  resource is applied with success
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: networkqoses.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: NetworkQoS
    listKind: NetworkQoSList
    plural: networkqoses
    singular: networkqos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          NetworkQoS is a CRD that allows the user to define a DSCP marking and metering
          for pods ingress/egress traffic on its namespace to specified CIDRs,
          protocol and port. Traffic belong these pods will be checked against
          each Rule in the namespace's NetworkQoS, and if there is a match the traffic
          is marked with relevant DSCP value and enforcing specified policing
          parameters.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of NetworkQoS
            properties:
              egress:
                description: |-
                  egress a collection of Egress NetworkQoS rule objects. A total of 20 rules will
                  be allowed in each NetworkQoS instance. The relative precedence of egress rules
                  within a single NetworkQos object (all of which share the priority) will be
                  determined by the order in which the rule is written. Thus, a rule that appears
                  first in the list of egress rules would take the lower precedence.
                items:
                  properties:
                    bandwidth:
                      description: |-
                        Bandwidth controls the maximum of rate traffic that can be sent
                        or received on the matching packets.
                      properties:
                        burst:
                          description: |-
                            burst The value of burst rate limit in kilobits.
                            This also needs rate to be specified.
                          format: int32
                          maximum: 4294967295
                          minimum: 1
                          type: integer
                        rate:
                          description: |-
                            rate The value of rate limit in kbps. Traffic over the limit
                            will be dropped.
                          format: int32
                          maximum: 4294967295
                          minimum: 1
                          type: integer
                      type: object
                    classifier:
                      description: |-
                        classifier The classifier on which packets should match
                        to apply the NetworkQoS Rule.
                        This field is optional, and in case it is not set the rule is applied
                        to all egress traffic regardless of the destination.
                      properties:
                        ports:
                          items:
                            description: |-
                              Port specifies destination protocol and port on which NetworkQoS
                              rule is applied
                            properties:
                              port:
                                description: port that the traffic must match
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                description: protocol (tcp, udp, sctp) that the traffic
                                  must match.
                                pattern: ^TCP|UDP|SCTP$
                                type: string
                            type: object
                          type: array
                        to:
                          items:
                            description: |-
                              Destination describes a peer to apply NetworkQoS configuration for the outgoing traffic.
                              Only certain combinations of fields are allowed.
                            properties:
                              ipBlock:
                                description: |-
                                  ipBlock defines policy on a particular IPBlock. If this field is set then
                                  neither of the other fields can be.
                                properties:
                                  cidr:
                                    description: |-
                                      cidr is a string representing the IPBlock
                                      Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                    type: string
                                  except:
                                    description: |-
                                      except is a slice of CIDRs that should not be included within an IPBlock
                                      Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                      Except values will be rejected if they are outside the cidr range
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - cidr
                                type: object
                              namespaceSelector:
                                description: |-
                                  namespaceSelector selects namespaces using cluster-scoped labels. This field follows
                                  standard label selector semantics; if present but empty, it selects all namespaces.

                                  If podSelector is also set, then the NetworkQoS as a whole selects
                                  the pods matching podSelector in the namespaces selected by namespaceSelector.
                                  Otherwise it selects all pods in the namespaces selected by namespaceSelector.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  podSelector is a label selector which selects pods. This field follows standard label
                                  selector semantics; if present but empty, it selects all pods.

                                  If namespaceSelector is also set, then the NetworkQoS as a whole selects
                                  the pods matching podSelector in the Namespaces selected by NamespaceSelector.
                                  Otherwise it selects the pods matching podSelector in the NetworkQoS's own namespace.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                            x-kubernetes-validations:
                            - message: Can't specify both podSelector/namespaceSelector
                                and ipBlock
                              rule: '!(has(self.ipBlock) && (has(self.podSelector)
                                || has(self.namespaceSelector)))'
                          type: array
                      type: object
                    dscp:
                      description: dscp marking value for matching pods' traffic.
                      maximum: 63
                      minimum: 0
                      type: integer
                  required:
                  - dscp
                  type: object
                maxItems: 20
                type: array
              networkSelectors:
                description: |-
                  networkSelector selects the networks on which the pod IPs need to be added to the source address set.
                  NetworkQoS controller currently supports `NetworkAttachmentDefinitions` type only.
                items:
                  description: NetworkSelector selects a set of networks.
                  properties:
                    clusterUserDefinedNetworkSelector:
                      description: |-
                        clusterUserDefinedNetworkSelector selects ClusterUserDefinedNetworks when
                        NetworkSelectionType is 'ClusterUserDefinedNetworks'.
                      properties:
                        networkSelector:
                          description: |-
                            networkSelector selects ClusterUserDefinedNetworks by label. A null
                            selector will mot match anything, while an empty ({}) selector will match
                            all.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - networkSelector
                      type: object
                    networkAttachmentDefinitionSelector:
                      description: |-
                        networkAttachmentDefinitionSelector selects networks defined in the
                        selected NetworkAttachmentDefinitions when NetworkSelectionType is
                        'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the
                            NetworkAttachmentDefinitions are defined. This field follows standard
                            label selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects NetworkAttachmentDefinitions within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                    networkSelectionType:
                      description: networkSelectionType determines the type of networks
                        selected.
                      enum:
                      - DefaultNetwork
                      - ClusterUserDefinedNetworks
                      - PrimaryUserDefinedNetworks
                      - SecondaryUserDefinedNetworks
                      - NetworkAttachmentDefinitions
                      type: string
                    primaryUserDefinedNetworkSelector:
                      description: |-
                        primaryUserDefinedNetworkSelector selects primary UserDefinedNetworks when
                        NetworkSelectionType is 'PrimaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector select the primary UserDefinedNetworks that are servind
                            the selected namespaces. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      type: object
                    secondaryUserDefinedNetworkSelector:
                      description: |-
                        secondaryUserDefinedNetworkSelector selects secondary UserDefinedNetworks
                        when NetworkSelectionType is 'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the secondary
                            UserDefinedNetworks are defined. This field follows standard label
                            selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects secondary UserDefinedNetworks within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                  required:
                  - networkSelectionType
                  type: object
                  x-kubernetes-validations:
                  - message: 'Inconsistent selector: both networkSelectionType ClusterUserDefinedNetworks
                      and clusterUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.clusterUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''ClusterUserDefinedNetworks''
                      : self.networkSelectionType != ''ClusterUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType PrimaryUserDefinedNetworks
                      and primaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.primaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''PrimaryUserDefinedNetworks''
                      : self.networkSelectionType != ''PrimaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType SecondaryUserDefinedNetworks
                      and secondaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.secondaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''SecondaryUserDefinedNetworks''
                      : self.networkSelectionType != ''SecondaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType NetworkAttachmentDefinitions
                      and networkAttachmentDefinitionSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.networkAttachmentDefinitionSelector)
                      ? self.networkSelectionType == ''NetworkAttachmentDefinitions''
                      : self.networkSelectionType != ''NetworkAttachmentDefinitions'''
                maxItems: 5
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - networkSelectionType
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: networkSelector is immutable
                  rule: self == oldSelf
                - message: Unsupported network selection type
                  rule: self.all(sel, sel.networkSelectionType == 'ClusterUserDefinedNetworks'
                    || sel.networkSelectionType == 'NetworkAttachmentDefinitions')
              podSelector:
                description: |-
                  podSelector applies the NetworkQoS rule only to the pods in the namespace whose label
                  matches this definition. This field is optional, and in case it is not set
                  results in the rule being applied to all pods in the namespace.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              priority:
                description: |-
                  priority is a value from 0 to 100 and represents the NetworkQoS' priority.
                  QoSes with numerically higher priority takes precedence over those with lower.
                maximum: 100
                minimum: 0
                type: integer
            required:
            - egress
            - priority
            type: object
          status:
            description: Status defines the observed state of NetworkQoS
            properties:
              conditions:
                description: An array of condition objects indicating details about
                  status of NetworkQoS object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: A concise indication of whether the NetworkQoS resource
                  is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: routeadvertisements.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: RouteAdvertisements
    listKind: RouteAdvertisementsList
    plural: routeadvertisements
    shortNames:
    - ra
    singular: routeadvertisements
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: RouteAdvertisements is the Schema for the routeadvertisements
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RouteAdvertisementsSpec defines the desired state of RouteAdvertisements
            properties:
              advertisements:
                description: advertisements determines what is advertised.
                items:
                  description: AdvertisementType determines the type of advertisement.
                  enum:
                  - PodNetwork
                  - EgressIP
                  type: string
                maxItems: 2
                minItems: 1
                type: array
                x-kubernetes-validations:
                - rule: self.all(x, self.exists_one(y, x == y))
              frrConfigurationSelector:
                description: |-
                  frrConfigurationSelector determines which FRRConfigurations will the
                  OVN-Kubernetes driven FRRConfigurations be based on. This field follows
                  standard label selector semantics.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              networkSelectors:
                description: |-
                  networkSelectors determines which network routes should be advertised.
                  Only ClusterUserDefinedNetworks and the default network can be selected.
                items:
                  description: NetworkSelector selects a set of networks.
                  properties:
                    clusterUserDefinedNetworkSelector:
                      description: |-
                        clusterUserDefinedNetworkSelector selects ClusterUserDefinedNetworks when
                        NetworkSelectionType is 'ClusterUserDefinedNetworks'.
                      properties:
                        networkSelector:
                          description: |-
                            networkSelector selects ClusterUserDefinedNetworks by label. A null
                            selector will mot match anything, while an empty ({}) selector will match
                            all.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - networkSelector
                      type: object
                    networkAttachmentDefinitionSelector:
                      description: |-
                        networkAttachmentDefinitionSelector selects networks defined in the
                        selected NetworkAttachmentDefinitions when NetworkSelectionType is
                        'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the
                            NetworkAttachmentDefinitions are defined. This field follows standard
                            label selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects NetworkAttachmentDefinitions within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                    networkSelectionType:
                      description: networkSelectionType determines the type of networks
                        selected.
                      enum:
                      - DefaultNetwork
                      - ClusterUserDefinedNetworks
                      - PrimaryUserDefinedNetworks
                      - SecondaryUserDefinedNetworks
                      - NetworkAttachmentDefinitions
                      type: string
                    primaryUserDefinedNetworkSelector:
                      description: |-
                        primaryUserDefinedNetworkSelector selects primary UserDefinedNetworks when
                        NetworkSelectionType is 'PrimaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector select the primary UserDefinedNetworks that are servind
                            the selected namespaces. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      type: object
                    secondaryUserDefinedNetworkSelector:
                      description: |-
                        secondaryUserDefinedNetworkSelector selects secondary UserDefinedNetworks
                        when NetworkSelectionType is 'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the secondary
                            UserDefinedNetworks are defined. This field follows standard label
                            selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects secondary UserDefinedNetworks within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                  required:
                  - networkSelectionType
                  type: object
                  x-kubernetes-validations:
                  - message: 'Inconsistent selector: both networkSelectionType ClusterUserDefinedNetworks
                      and clusterUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.clusterUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''ClusterUserDefinedNetworks''
                      : self.networkSelectionType != ''ClusterUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType PrimaryUserDefinedNetworks
                      and primaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.primaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''PrimaryUserDefinedNetworks''
                      : self.networkSelectionType != ''PrimaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType SecondaryUserDefinedNetworks
                      and secondaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.secondaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''SecondaryUserDefinedNetworks''
                      : self.networkSelectionType != ''SecondaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType NetworkAttachmentDefinitions
                      and networkAttachmentDefinitionSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.networkAttachmentDefinitionSelector)
                      ? self.networkSelectionType == ''NetworkAttachmentDefinitions''
                      : self.networkSelectionType != ''NetworkAttachmentDefinitions'''
                maxItems: 5
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - networkSelectionType
                x-kubernetes-list-type: map
              nodeSelector:
                description: |-
                  nodeSelector limits the advertisements to selected nodes. This field
                  follows standard label selector semantics.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              targetVRF:
                description: targetVRF determines which VRF the routes should be advertised
                  in.
                type: string
            required:
            - advertisements
            - frrConfigurationSelector
            - networkSelectors
            - nodeSelector
            type: object
            x-kubernetes-validations:
            - message: If 'PodNetwork' is selected for advertisement, a 'nodeSelector'
                can't be specified as it needs to be advertised on all nodes
              rule: (!has(self.nodeSelector.matchLabels) && !has(self.nodeSelector.matchExpressions))
                || !('PodNetwork' in self.advertisements)
            - message: Only DefaultNetwork or ClusterUserDefinedNetworks can be selected
              rule: '!self.networkSelectors.exists(i, i.networkSelectionType != ''DefaultNetwork''
                && i.networkSelectionType != ''ClusterUserDefinedNetworks'')'
          status:
            description: |-
              RouteAdvertisementsStatus defines the observed state of RouteAdvertisements.
              It should always be reconstructable from the state of the cluster and/or
              outside world.
            properties:
              conditions:
                description: |-
                  conditions is an array of condition objects indicating details about
                  status of RouteAdvertisements object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: |-
                  status is a concise indication of whether the RouteAdvertisements
                  resource is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: ipamclaims.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  names:
    kind: IPAMClaim
    listKind: IPAMClaimList
    plural: ipamclaims
    singular: ipamclaim
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPAMClaim is the Schema for the IPAMClaim API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              interface:
                description: The pod interface name for which this allocation was
                  created
                type: string
              network:
                description: The network name for which this persistent allocation
                  was created
                type: string
            required:
            - interface
            - network
            type: object
          status:
            properties:
              ips:
                description: The list of IP addresses (v4, v6) that were allocated
                  for the pod interface
                items:
                  type: string
                type: array
            required:
            - ips
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
      ---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressips.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressIP
    listKind: EgressIPList
    plural: egressips
    shortNames:
    - eip
    singular: egressip
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.egressIPs[*]
      name: EgressIPs
      type: string
    - jsonPath: .status.items[*].node
      name: Assigned Node
      type: string
    - jsonPath: .status.items[*].egressIP
      name: Assigned EgressIPs
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressIP is a CRD allowing the user to define a fixed
          source IP for all egress traffic originating from any pods which
          match the EgressIP resource according to its spec definition.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of EgressIP.
            properties:
              egressIPs:
                description: |-
                  EgressIPs is the list of egress IP addresses requested. Can be IPv4 and/or IPv6.
                  This field is mandatory.
                items:
                  type: string
                type: array
              namespaceSelector:
                description: |-
                  NamespaceSelector applies the egress IP only to the namespace(s) whose label
                  matches this definition. This field is mandatory.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              podSelector:
                description: |-
                  PodSelector applies the egress IP only to the pods whose label
                  matches this definition. This field is optional, and in case it is not set:
                  results in the egress IP being applied to all pods in the namespace(s)
                  matched by the NamespaceSelector. In case it is set: is intersected with
                  the NamespaceSelector, thus applying the egress IP to the pods
                  (in the namespace(s) already matched by the NamespaceSelector) which
                  match this pod selector.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - egressIPs
            - namespaceSelector
            type: object
          status:
            description: Observed status of EgressIP. Read-only.
            properties:
              items:
                description: The list of assigned egress IPs and their corresponding
                  node assignment.
                items:
                  description: The per node status, for those egress IPs who have
                    been assigned.
                  properties:
                    egressIP:
                      description: Assigned egress IP
                      type: string
                    node:
                      description: Assigned node name
                      type: string
                  required:
                  - egressIP
                  - node
                  type: object
                type: array
            required:
            - items
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressfirewalls.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressFirewall
    listKind: EgressFirewallList
    plural: egressfirewalls
    singular: egressfirewall
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: EgressFirewall Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressFirewall describes the current egress firewall for a Namespace.
          Traffic from a pod to an IP address outside the cluster will be checked against
          each EgressFirewallRule in the pod's namespace's EgressFirewall, in
          order. If no rule matches (or no EgressFirewall is present) then the traffic
          will be allowed by default.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
            properties:
              name:
                type: string
                pattern: ^default$
          spec:
            description: Specification of the desired behavior of EgressFirewall.
            properties:
              egress:
                description: a collection of egress firewall rule objects
                items:
                  description: EgressFirewallRule is a single egressfirewall rule
                    object
                  properties:
                    ports:
                      description: ports specify what ports and protocols the rule
                        applies to
                      items:
                        description: EgressFirewallPort specifies the port to allow
                          or deny traffic to
                        properties:
                          port:
                            description: port that the traffic must match
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          protocol:
                            description: protocol (tcp, udp, sctp) that the traffic
                              must match.
                            pattern: ^TCP|UDP|SCTP$
                            type: string
                        required:
                        - port
                        - protocol
                        type: object
                      type: array
                    to:
                      description: to is the target that traffic is allowed/denied
                        to
                      maxProperties: 1
                      minProperties: 1
                      properties:
                        cidrSelector:
                          description: cidrSelector is the CIDR range to allow/deny
                            traffic to. If this is set, dnsName and nodeSelector must
                            be unset.
                          type: string
                        dnsName:
                          description: |-
                            dnsName is the domain name to allow/deny traffic to. If this is set, cidrSelector and nodeSelector must be unset.
                            For a wildcard DNS name, the '*' will match only one label. Additionally, only a single '*' can be
                            used at the beginning of the wildcard DNS name. For example, '*.example.com' will match 'sub1.example.com'
                            but won't match 'sub2.sub1.example.com'.
                          pattern: ^(\*\.)?([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                          type: string
                        nodeSelector:
                          description: |-
                            nodeSelector will allow/deny traffic to the Kubernetes node IP of selected nodes. If this is set,
                            cidrSelector and DNSName must be unset.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type:
                      description: type marks this as an "Allow" or "Deny" rule
                      pattern: ^Allow|Deny$
                      type: string
                  required:
                  - to
                  - type
                  type: object
                type: array
            required:
            - egress
            type: object
          status:
            description: Observed status of EgressFirewall
            properties:
              messages:
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              status:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressservices.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressService
    listKind: EgressServiceList
    plural: egressservices
    singular: egressservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.host
      name: Assigned Host
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressService is a CRD that allows the user to request that the source
          IP of egress packets originating from all of the pods that are endpoints
          of the corresponding LoadBalancer Service would be its ingress IP.
          In addition, it allows the user to request that egress packets originating from
          all of the pods that are endpoints of the LoadBalancer service would use a different
          network than the main one.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EgressServiceSpec defines the desired state of EgressService
            properties:
              network:
                description: |-
                  The network which this service should send egress and corresponding ingress replies to.
                  This is typically implemented as VRF mapping, representing a numeric id or string name
                  of a routing table which by omission uses the default host routing.
                type: string
              nodeSelector:
                description: |-
                  Allows limiting the nodes that can be selected to handle the service's traffic when sourceIPBy=LoadBalancerIP.
                  When present only a node whose labels match the specified selectors can be selected
                  for handling the service's traffic.
                  When it is not specified any node in the cluster can be chosen to manage the service's traffic.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              sourceIPBy:
                description: |-
                  Determines the source IP of egress traffic originating from the pods backing the LoadBalancer Service.
                  When `LoadBalancerIP` the source IP is set to its LoadBalancer ingress IP.
                  When `Network` the source IP is set according to the interface of the Network,
                  leveraging the masquerade rules that are already in place.
                  Typically these rules specify SNAT to the IP of the outgoing interface,
                  which means the packet will typically leave with the IP of the node.
                enum:
                - LoadBalancerIP
                - Network
                type: string
            type: object
          status:
            description: EgressServiceStatus defines the observed state of EgressService
            properties:
              host:
                description: |-
                  The name of the node selected to handle the service's traffic.
                  In case sourceIPBy=Network the field will be set to "ALL".
                type: string
            required:
            - host
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: egressqoses.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: EgressQoS
    listKind: EgressQoSList
    plural: egressqoses
    singular: egressqos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          EgressQoS is a CRD that allows the user to define a DSCP value
          for pods egress traffic on its namespace to specified CIDRs.
          Traffic from these pods will be checked against each EgressQoSRule in
          the namespace's EgressQoS, and if there is a match the traffic is marked
          with the relevant DSCP value.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
            properties:
              name:
                type: string
                pattern: ^default$
          spec:
            description: EgressQoSSpec defines the desired state of EgressQoS
            properties:
              egress:
                description: a collection of Egress QoS rule objects
                items:
                  properties:
                    dscp:
                      description: DSCP marking value for matching pods' traffic.
                      maximum: 63
                      minimum: 0
                      type: integer
                    dstCIDR:
                      description: |-
                        DstCIDR specifies the destination's CIDR. Only traffic heading
                        to this CIDR will be marked with the DSCP value.
                        This field is optional, and in case it is not set the rule is applied
                        to all egress traffic regardless of the destination.
                      format: cidr
                      type: string
                    podSelector:
                      description: |-
                        PodSelector applies the QoS rule only to the pods in the namespace whose label
                        matches this definition. This field is optional, and in case it is not set
                        results in the rule being applied to all pods in the namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - dscp
                  type: object
                type: array
            required:
            - egress
            type: object
          status:
            description: EgressQoSStatus defines the observed state of EgressQoS
            properties:
              conditions:
                description: An array of condition objects indicating details about
                  status of EgressQoS object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: A concise indication of whether the EgressQoS resource
                  is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: adminpolicybasedexternalroutes.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: AdminPolicyBasedExternalRoute
    listKind: AdminPolicyBasedExternalRouteList
    plural: adminpolicybasedexternalroutes
    shortNames:
    - apbexternalroute
    singular: adminpolicybasedexternalroute
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.lastTransitionTime
      name: Last Update
      type: date
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          AdminPolicyBasedExternalRoute is a CRD allowing the cluster administrators to configure policies for external gateway IPs to be applied to all the pods contained in selected namespaces.
          Egress traffic from the pods that belong to the selected namespaces to outside the cluster is routed through these external gateway IPs.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AdminPolicyBasedExternalRouteSpec defines the desired state
              of AdminPolicyBasedExternalRoute
            properties:
              from:
                description: From defines the selectors that will determine the target
                  namespaces to this CR.
                properties:
                  namespaceSelector:
                    description: NamespaceSelector defines a selector to be used to
                      determine which namespaces will be targeted by this CR
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - namespaceSelector
                type: object
              nextHops:
                description: 'NextHops defines two types of hops: Static and Dynamic.
                  Each hop defines at least one external gateway IP.'
                minProperties: 1
                properties:
                  dynamic:
                    description: DynamicHops defines a slices of DynamicHop. This
                      field is optional.
                    items:
                      description: |-
                        DynamicHop defines the configuration for a dynamic external gateway interface.
                        These interfaces are wrapped around a pod object that resides inside the cluster.
                        The field NetworkAttachmentName captures the name of the multus network name to use when retrieving the gateway IP to use.
                        The PodSelector and the NamespaceSelector are mandatory fields.
                      properties:
                        bfdEnabled:
                          default: false
                          description: BFDEnabled determines if the interface implements
                            the Bidirectional Forward Detection protocol. Defaults
                            to false.
                          type: boolean
                        namespaceSelector:
                          description: NamespaceSelector defines a selector to filter
                            the namespaces where the pod gateways are located.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkAttachmentName:
                          default: ""
                          description: |-
                            NetworkAttachmentName determines the multus network name to use when retrieving the pod IPs that will be used as the gateway IP.
                            When this field is empty, the logic assumes that the pod is configured with HostNetwork and is using the node's IP as gateway.
                          type: string
                        podSelector:
                          description: PodSelector defines the selector to filter
                            the pods that are external gateways.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - podSelector
                      type: object
                    type: array
                  static:
                    description: StaticHops defines a slice of StaticHop. This field
                      is optional.
                    items:
                      description: StaticHop defines the configuration of a static
                        IP that acts as an external Gateway Interface. IP field is
                        mandatory.
                      properties:
                        bfdEnabled:
                          default: false
                          description: BFDEnabled determines if the interface implements
                            the Bidirectional Forward Detection protocol. Defaults
                            to false.
                          type: boolean
                        ip:
                          description: IP defines the static IP to be used for egress
                            traffic. The IP can be either IPv4 or IPv6.
                          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                type: object
            required:
            - from
            - nextHops
            type: object
          status:
            description: AdminPolicyBasedRouteStatus contains the observed status
              of the AdminPolicyBased route types.
            properties:
              lastTransitionTime:
                description: Captures the time when the last change was applied.
                format: date-time
                type: string
              messages:
                description: An array of Human-readable messages indicating details
                  about the status of the object.
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              status:
                description: A concise indication of whether the AdminPolicyBasedRoute
                  resource is applied with success
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: networkqoses.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: NetworkQoS
    listKind: NetworkQoSList
    plural: networkqoses
    singular: networkqos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          NetworkQoS is a CRD that allows the user to define a DSCP marking and metering
          for pods ingress/egress traffic on its namespace to specified CIDRs,
          protocol and port. Traffic belong these pods will be checked against
          each Rule in the namespace's NetworkQoS, and if there is a match the traffic
          is marked with relevant DSCP value and enforcing specified policing
          parameters.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of NetworkQoS
            properties:
              egress:
                description: |-
                  egress a collection of Egress NetworkQoS rule objects. A total of 20 rules will
                  be allowed in each NetworkQoS instance. The relative precedence of egress rules
                  within a single NetworkQos object (all of which share the priority) will be
                  determined by the order in which the rule is written. Thus, a rule that appears
                  first in the list of egress rules would take the lower precedence.
                items:
                  properties:
                    bandwidth:
                      description: |-
                        Bandwidth controls the maximum of rate traffic that can be sent
                        or received on the matching packets.
                      properties:
                        burst:
                          description: |-
                            burst The value of burst rate limit in kilobits.
                            This also needs rate to be specified.
                          format: int32
                          maximum: 4294967295
                          minimum: 1
                          type: integer
                        rate:
                          description: |-
                            rate The value of rate limit in kbps. Traffic over the limit
                            will be dropped.
                          format: int32
                          maximum: 4294967295
                          minimum: 1
                          type: integer
                      type: object
                    classifier:
                      description: |-
                        classifier The classifier on which packets should match
                        to apply the NetworkQoS Rule.
                        This field is optional, and in case it is not set the rule is applied
                        to all egress traffic regardless of the destination.
                      properties:
                        ports:
                          items:
                            description: |-
                              Port specifies destination protocol and port on which NetworkQoS
                              rule is applied
                            properties:
                              port:
                                description: port that the traffic must match
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                description: protocol (tcp, udp, sctp) that the traffic
                                  must match.
                                pattern: ^TCP|UDP|SCTP$
                                type: string
                            type: object
                          type: array
                        to:
                          items:
                            description: |-
                              Destination describes a peer to apply NetworkQoS configuration for the outgoing traffic.
                              Only certain combinations of fields are allowed.
                            properties:
                              ipBlock:
                                description: |-
                                  ipBlock defines policy on a particular IPBlock. If this field is set then
                                  neither of the other fields can be.
                                properties:
                                  cidr:
                                    description: |-
                                      cidr is a string representing the IPBlock
                                      Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                    type: string
                                  except:
                                    description: |-
                                      except is a slice of CIDRs that should not be included within an IPBlock
                                      Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                      Except values will be rejected if they are outside the cidr range
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - cidr
                                type: object
                              namespaceSelector:
                                description: |-
                                  namespaceSelector selects namespaces using cluster-scoped labels. This field follows
                                  standard label selector semantics; if present but empty, it selects all namespaces.

                                  If podSelector is also set, then the NetworkQoS as a whole selects
                                  the pods matching podSelector in the namespaces selected by namespaceSelector.
                                  Otherwise it selects all pods in the namespaces selected by namespaceSelector.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  podSelector is a label selector which selects pods. This field follows standard label
                                  selector semantics; if present but empty, it selects all pods.

                                  If namespaceSelector is also set, then the NetworkQoS as a whole selects
                                  the pods matching podSelector in the Namespaces selected by NamespaceSelector.
                                  Otherwise it selects the pods matching podSelector in the NetworkQoS's own namespace.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                            x-kubernetes-validations:
                            - message: Can't specify both podSelector/namespaceSelector
                                and ipBlock
                              rule: '!(has(self.ipBlock) && (has(self.podSelector)
                                || has(self.namespaceSelector)))'
                          type: array
                      type: object
                    dscp:
                      description: dscp marking value for matching pods' traffic.
                      maximum: 63
                      minimum: 0
                      type: integer
                  required:
                  - dscp
                  type: object
                maxItems: 20
                type: array
              networkSelectors:
                description: |-
                  networkSelector selects the networks on which the pod IPs need to be added to the source address set.
                  NetworkQoS controller currently supports `NetworkAttachmentDefinitions` type only.
                items:
                  description: NetworkSelector selects a set of networks.
                  properties:
                    clusterUserDefinedNetworkSelector:
                      description: |-
                        clusterUserDefinedNetworkSelector selects ClusterUserDefinedNetworks when
                        NetworkSelectionType is 'ClusterUserDefinedNetworks'.
                      properties:
                        networkSelector:
                          description: |-
                            networkSelector selects ClusterUserDefinedNetworks by label. A null
                            selector will mot match anything, while an empty ({}) selector will match
                            all.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - networkSelector
                      type: object
                    networkAttachmentDefinitionSelector:
                      description: |-
                        networkAttachmentDefinitionSelector selects networks defined in the
                        selected NetworkAttachmentDefinitions when NetworkSelectionType is
                        'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the
                            NetworkAttachmentDefinitions are defined. This field follows standard
                            label selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects NetworkAttachmentDefinitions within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                    networkSelectionType:
                      description: networkSelectionType determines the type of networks
                        selected.
                      enum:
                      - DefaultNetwork
                      - ClusterUserDefinedNetworks
                      - PrimaryUserDefinedNetworks
                      - SecondaryUserDefinedNetworks
                      - NetworkAttachmentDefinitions
                      type: string
                    primaryUserDefinedNetworkSelector:
                      description: |-
                        primaryUserDefinedNetworkSelector selects primary UserDefinedNetworks when
                        NetworkSelectionType is 'PrimaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector select the primary UserDefinedNetworks that are servind
                            the selected namespaces. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      type: object
                    secondaryUserDefinedNetworkSelector:
                      description: |-
                        secondaryUserDefinedNetworkSelector selects secondary UserDefinedNetworks
                        when NetworkSelectionType is 'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the secondary
                            UserDefinedNetworks are defined. This field follows standard label
                            selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects secondary UserDefinedNetworks within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                  required:
                  - networkSelectionType
                  type: object
                  x-kubernetes-validations:
                  - message: 'Inconsistent selector: both networkSelectionType ClusterUserDefinedNetworks
                      and clusterUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.clusterUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''ClusterUserDefinedNetworks''
                      : self.networkSelectionType != ''ClusterUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType PrimaryUserDefinedNetworks
                      and primaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.primaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''PrimaryUserDefinedNetworks''
                      : self.networkSelectionType != ''PrimaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType SecondaryUserDefinedNetworks
                      and secondaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.secondaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''SecondaryUserDefinedNetworks''
                      : self.networkSelectionType != ''SecondaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType NetworkAttachmentDefinitions
                      and networkAttachmentDefinitionSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.networkAttachmentDefinitionSelector)
                      ? self.networkSelectionType == ''NetworkAttachmentDefinitions''
                      : self.networkSelectionType != ''NetworkAttachmentDefinitions'''
                maxItems: 5
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - networkSelectionType
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: networkSelector is immutable
                  rule: self == oldSelf
                - message: Unsupported network selection type
                  rule: self.all(sel, sel.networkSelectionType == 'ClusterUserDefinedNetworks'
                    || sel.networkSelectionType == 'NetworkAttachmentDefinitions')
              podSelector:
                description: |-
                  podSelector applies the NetworkQoS rule only to the pods in the namespace whose label
                  matches this definition. This field is optional, and in case it is not set
                  results in the rule being applied to all pods in the namespace.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              priority:
                description: |-
                  priority is a value from 0 to 100 and represents the NetworkQoS' priority.
                  QoSes with numerically higher priority takes precedence over those with lower.
                maximum: 100
                minimum: 0
                type: integer
            required:
            - egress
            - priority
            type: object
          status:
            description: Status defines the observed state of NetworkQoS
            properties:
              conditions:
                description: An array of condition objects indicating details about
                  status of NetworkQoS object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: A concise indication of whether the NetworkQoS resource
                  is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: routeadvertisements.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: RouteAdvertisements
    listKind: RouteAdvertisementsList
    plural: routeadvertisements
    shortNames:
    - ra
    singular: routeadvertisements
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: RouteAdvertisements is the Schema for the routeadvertisements
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RouteAdvertisementsSpec defines the desired state of RouteAdvertisements
            properties:
              advertisements:
                description: advertisements determines what is advertised.
                items:
                  description: AdvertisementType determines the type of advertisement.
                  enum:
                  - PodNetwork
                  - EgressIP
                  type: string
                maxItems: 2
                minItems: 1
                type: array
                x-kubernetes-validations:
                - rule: self.all(x, self.exists_one(y, x == y))
              frrConfigurationSelector:
                description: |-
                  frrConfigurationSelector determines which FRRConfigurations will the
                  OVN-Kubernetes driven FRRConfigurations be based on. This field follows
                  standard label selector semantics.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              networkSelectors:
                description: |-
                  networkSelectors determines which network routes should be advertised.
                  Only ClusterUserDefinedNetworks and the default network can be selected.
                items:
                  description: NetworkSelector selects a set of networks.
                  properties:
                    clusterUserDefinedNetworkSelector:
                      description: |-
                        clusterUserDefinedNetworkSelector selects ClusterUserDefinedNetworks when
                        NetworkSelectionType is 'ClusterUserDefinedNetworks'.
                      properties:
                        networkSelector:
                          description: |-
                            networkSelector selects ClusterUserDefinedNetworks by label. A null
                            selector will mot match anything, while an empty ({}) selector will match
                            all.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - networkSelector
                      type: object
                    networkAttachmentDefinitionSelector:
                      description: |-
                        networkAttachmentDefinitionSelector selects networks defined in the
                        selected NetworkAttachmentDefinitions when NetworkSelectionType is
                        'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the
                            NetworkAttachmentDefinitions are defined. This field follows standard
                            label selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects NetworkAttachmentDefinitions within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                    networkSelectionType:
                      description: networkSelectionType determines the type of networks
                        selected.
                      enum:
                      - DefaultNetwork
                      - ClusterUserDefinedNetworks
                      - PrimaryUserDefinedNetworks
                      - SecondaryUserDefinedNetworks
                      - NetworkAttachmentDefinitions
                      type: string
                    primaryUserDefinedNetworkSelector:
                      description: |-
                        primaryUserDefinedNetworkSelector selects primary UserDefinedNetworks when
                        NetworkSelectionType is 'PrimaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector select the primary UserDefinedNetworks that are servind
                            the selected namespaces. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      type: object
                    secondaryUserDefinedNetworkSelector:
                      description: |-
                        secondaryUserDefinedNetworkSelector selects secondary UserDefinedNetworks
                        when NetworkSelectionType is 'SecondaryUserDefinedNetworks'.
                      properties:
                        namespaceSelector:
                          description: |-
                            namespaceSelector selects namespaces where the secondary
                            UserDefinedNetworks are defined. This field follows standard label
                            selector semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        networkSelector:
                          description: |-
                            networkSelector selects secondary UserDefinedNetworks within the selected
                            namespaces by label. This field follows standard label selector
                            semantics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - namespaceSelector
                      - networkSelector
                      type: object
                  required:
                  - networkSelectionType
                  type: object
                  x-kubernetes-validations:
                  - message: 'Inconsistent selector: both networkSelectionType ClusterUserDefinedNetworks
                      and clusterUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.clusterUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''ClusterUserDefinedNetworks''
                      : self.networkSelectionType != ''ClusterUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType PrimaryUserDefinedNetworks
                      and primaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.primaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''PrimaryUserDefinedNetworks''
                      : self.networkSelectionType != ''PrimaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType SecondaryUserDefinedNetworks
                      and secondaryUserDefinedNetworkSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.secondaryUserDefinedNetworkSelector)
                      ? self.networkSelectionType == ''SecondaryUserDefinedNetworks''
                      : self.networkSelectionType != ''SecondaryUserDefinedNetworks'''
                  - message: 'Inconsistent selector: both networkSelectionType NetworkAttachmentDefinitions
                      and networkAttachmentDefinitionSelector have to be set or neither'
                    rule: '!has(self.networkSelectionType) ? true : has(self.networkAttachmentDefinitionSelector)
                      ? self.networkSelectionType == ''NetworkAttachmentDefinitions''
                      : self.networkSelectionType != ''NetworkAttachmentDefinitions'''
                maxItems: 5
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - networkSelectionType
                x-kubernetes-list-type: map
              nodeSelector:
                description: |-
                  nodeSelector limits the advertisements to selected nodes. This field
                  follows standard label selector semantics.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              targetVRF:
                description: targetVRF determines which VRF the routes should be advertised
                  in.
                type: string
            required:
            - advertisements
            - frrConfigurationSelector
            - networkSelectors
            - nodeSelector
            type: object
            x-kubernetes-validations:
            - message: If 'PodNetwork' is selected for advertisement, a 'nodeSelector'
                can't be specified as it needs to be advertised on all nodes
              rule: (!has(self.nodeSelector.matchLabels) && !has(self.nodeSelector.matchExpressions))
                || !('PodNetwork' in self.advertisements)
            - message: Only DefaultNetwork or ClusterUserDefinedNetworks can be selected
              rule: '!self.networkSelectors.exists(i, i.networkSelectionType != ''DefaultNetwork''
                && i.networkSelectionType != ''ClusterUserDefinedNetworks'')'
          status:
            description: |-
              RouteAdvertisementsStatus defines the observed state of RouteAdvertisements.
              It should always be reconstructable from the state of the cluster and/or
              outside world.
            properties:
              conditions:
                description: |-
                  conditions is an array of condition objects indicating details about
                  status of RouteAdvertisements object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: |-
                  status is a concise indication of whether the RouteAdvertisements
                  resource is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: ipamclaims.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  names:
    kind: IPAMClaim
    listKind: IPAMClaimList
    plural: ipamclaims
    singular: ipamclaim
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPAMClaim is the Schema for the IPAMClaim API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              interface:
                description: The pod interface name for which this allocation was
                  created
                type: string
              network:
                description: The network name for which this persistent allocation
                  was created
                type: string
            required:
            - interface
            - network
            type: object
          status:
            properties:
              ips:
                description: The list of IP addresses (v4, v6) that were allocated
                  for the pod interface
                items:
                  type: string
                type: array
            required:
            - ips
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  name: ovn-kubernetes
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/baseline: privileged
    fignxt.io/infrastructure: 'true'
---
# Source: ovn-kubernetes/templates/ovn-setup.yaml
# ovn-host-network-namespace.yaml
#
# Create the namespace for classifying host network traffic.
#
# This provisioning is done as part of installation after the cluster is
# up and before the ovn daemonsets are created.
apiVersion: v1
kind: Namespace
metadata:
  name: ovn-host-network
  labels:
    pod-security.kubernetes.io/enforce: privileged
    fignxt.io/infrastructure: 'true'
---
# Source: ovn-kubernetes/charts/ovnkube-identity/templates/rbac-ovnkube-identity.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    name: ovnkube-identity
    namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/charts/ovnkube-master/templates/rbac-ovnkube-master.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    name: ovnkube-master
    namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-db.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    name: ovnkube-db
    namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-node.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    name: ovnkube-node
    namespace: ovn-kubernetes

# When ovn_enable_ovnkube_identity is true, an ovnkube-node process will identify as a user in a system:ovn-nodes group,
# not the ovnkube-node serviceAccount
---
# Source: ovn-kubernetes/charts/ovnkube-identity/templates/webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ovnkube-webhook-cert
  namespace: ovn-kubernetes
data:
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMakNDQWhhZ0F3SUJBZ0lSQU5LTU9Cb09IUks1TDVJcTJLVXdRSGd3RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qVXdOVEEyTURZek5UVXhXaGNOTWpZdwpOVEEyTURZek5UVXhXakFVTVJJd0VBWURWUVFERXdsc2IyTmhiR2h2YzNRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMXlLUmp6eE1UTnVZU2IySjRiazRkbDJ4RVhVREpIZENBRmVET1BjRXEKZFgvMmUydWswYzJKOGc1cE4wMWhVNERvVmRWOEwvNzIzd1hCQi93MnlPdEZXVGtiN2J4dlcxcVFpWWF2blJXeAphMnk0eVlkczZiTk4xYWxNZ1NObC9xcWFNcUVNTjdpRTRaMzc3bVYxTkYzRm1tNVdKOWRQRnNNOFhYWFR1cTRPCmU3MVgvS3Rtcm1IWVoyTVAwUTVvOHNKa3RKQUJKa3V4d0s0N3BGRFVVOURwTUcvSTJyVTd0RUZ4THphS01wWk0KK2RsOXhSUFhydWVmdE1uZnoxY2NWY2JJNjlEazlwNTFXMHJNNG50VnpvYWdZdkVKZUxlcEpFSU5oQWt6aFoxTQo4L2w2UVlCY2FJcW42cXhpYlM5VmlkTW5vYm9wL3ZPQ05RRkQvYzJ6cW4vcEFnTUJBQUdqZGpCME1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSWjhySzVxblo5di8wV25DSkR0K3M1WjQzYzREQVVCZ05WSFJFRQpEVEFMZ2dsc2IyTmhiR2h2YzNRd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBZ2hxckZnWDZmMVk5WGxDU0piCk1aelRldTFNK0d2ZTA3R1cvRTY3N3dpbTJjN2k1aDMvc1EvN2tNWnhJYlJBNE1nSTZRcXg0NU5NSFlwMUlWalcKb2tWQWJVQm1EUVhOUDRHVVB4ZzdFUHkvUE92QUF5enRWY2JLWXR6ZFV0OElGdStoeGd0T0R0THI5WGYvT2Q5YgpaNlQ0WjF3bjhTNkgvWjA0V0R4UVlhR2tWVFRHR0ErSlBSWUk3bzN4ZUJ6VnFYbkNyODVuVGZMakNWUDZ6a1RXCktRd0tJRURCaEN6Z0FoWWNiNXEvWHdhREMrYUo5OVhsY0lEQUViN3BoWVVicGRzMm9xVWhQOWlRTFBtVmdEVFMKaUErWk5rWGMzS0ZyMU1pNW41Rkk5cnZaVHlpYjRmbkxmYjZidnEyUGVDNUVMbUllM28zWnlMZk1rZHR4aEZIRAo4aFE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGNpa1k4OFRFemJtRW05aWVHNU9IWmRzUkYxQXlSM1FnQlhnemozQktuVi85bnRyCnBOSE5pZklPYVRkTllWT0E2RlhWZkMvKzl0OEZ3UWY4TnNqclJWazVHKzI4YjF0YWtJbUdyNTBWc1d0c3VNbUgKYk9telRkV3BUSUVqWmY2cW1qS2hERGU0aE9HZCsrNWxkVFJkeFpwdVZpZlhUeGJEUEYxMTA3cXVEbnU5Vi95cgpacTVoMkdkakQ5RU9hUExDWkxTUUFTWkxzY0N1TzZSUTFGUFE2VEJ2eU5xMU83UkJjUzgyaWpLV1RQblpmY1VUCjE2N25uN1RKMzg5WEhGWEd5T3ZRNVBhZWRWdEt6T0o3VmM2R29HTHhDWGkzcVNSQ0RZUUpNNFdkVFBQNWVrR0EKWEdpS3ArcXNZbTB2VlluVEo2RzZLZjd6Z2pVQlEvM05zNnAvNlFJREFRQUJBb0lCQUIwc3BHVjRXR0ZmRURHcApPcTZGVlhnZVV6dnRrM1l6bU1EVndneVhrS2JWME1Hb01UQjBrMzR1SU8zMStDOUVqWTI4S05VVGh1SHNEU3BiCnM3aS9Lak1wREtkVTBrYzA3Q1lDVEdGbTNwSm80VHdPNi9NbzFxUUpSSENJMFR1UFVhWUp0aHNWM2tGRlRHdWcKYVJ3VVdYQmJScFlCTXViNGlrRG41djhpR01rdUFZRWQ5Q3ZCaGNRU3RLVDc5c0tJcU1nK3YzSENsZDJkZUxiMwpyRlpMRDNja0lCYi9rZkNCazRmUnc0YXVudUVmYjNic3E1TzJjZWY1NlU0WFF1UDh2Ri9Sd3lmYWx5R3Q5MlQ3ClpyOE9Ldm1LVmlVL3VQUGNucmRtbXNLNklQV3JvQnhhRFE1WS95Y002eERvMGhSY2NMVzR6TmFTMGYzVTZyZ1kKZjZBK0N6a0NnWUVBMFdlbjlVMDNIOFh0MnN2STdvbGRBT0pPeHQ3dkIweFNCQnNPT29qaEtDamlDYy9tck92cgo1VlhvWU05WVQ2VitjSStCc3V5RTVhTGczbEdMUGNpUm41YzNNQ2F1M214bFJ5aytITjUzQUh4MUVDM3pkUWtYClNydm1hdFgzSDduYkcrU2VCejhLa0pRam9PRVpCbG1TdE11amorOU9LQVZleHFQamIrcFdtNjhDZ1lFQTNqdVoKMmlEcnpsTWJ0aURlLzFnVUMyR1ppZGJjWk1Nei83MzBTL3psUVErcGZwT1FkbEszRS9yVFNjUzdGWEpSU2VudApjdXVhQnJMOHJuYldmL1d1QzFZcGxCaWlPQ3EzbFJFL0g5ckZETDVPTEFieDU5bVpWemNCVHVQS1JubTRycWkzCmNoaG1qbkt5NDZSSVd4Z2pNZmtLbk81U2lpVXhpVkJXaWluRWkrY0NnWUEwQ2wyc1VhODBYejBZVmZLdWpVYW0KdEpjOVJ5UUNIVTU0cEx5cGdXRHJXUldydUpZc1BVbFhxanpnNmthWkxKaTZvbjlxRnV1RUlqRmVMc2U2NkFDQQp0OVRJUzZURHRBNkxXODJLNFNLVDVWbzJWaVVkM2MrRERDVmNRYVp6cFAyMTlkL3NEeGV5REk2NktaYk5oQzg0CmJTOU4wdndLYUNOQW5IUW1XUWVERXdLQmdRQ1FWUjFETWdaMFpqMmxPQXdjd3RPaDRLMmJmRlIvak5nRXpSWVIKRkJyQStxOFdhamgwNEp2TytpU24wSUhCR0JIN2MxYW9RS1EwbmFMR25LQUxVMERLVkJlRSs4cS90OTZyamh2MQpVRnlTUGpiL0dUT2JaUlBXTlA5QWdXa3FCSHdSMDdudy9DLy9iRGNLNmZPa1ZqVGxpOTE4dHJ3Y3hMTTdmMVgxClBkTk5HUUtCZ1FDeXVZU2hUK05hWEVzTmJBWDV6eG9RbkNnTXdxQjdudmZWdXd0SkxCODV6WWM4aDV4WWIrOUcKb3I1eDQrdUE4YUtJQkU3aEFlTlFTNElNWjJ5ZVBrQVAzQTZQZ1c1RXdhQ1pYSVlxSWpYalFiOTg0TWE3aVBzSQpFdFFOL3JPSSt3dUNrVVZLdUVURWR4S0JzOUVqVVRGaDhMMEV3b2FHbkM0M1U3cjA1ZVRVTEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
type: kubernetes.io/tls
---
# Source: ovn-kubernetes/templates/ovn-setup.yaml
# The network cidr and service cidr are set in the ovn-config configmap
kind: ConfigMap
apiVersion: v1
metadata:
  name: ovn-config
  namespace: ovn-kubernetes
data:
  net_cidr:      10.244.0.0/14/23
  svc_cidr:      10.96.0.0/16
  k8s_apiserver: https://127.0.0.1:6443
  mtu:           "1400"
  host_network_namespace: ovn-host-network
---
# Source: ovn-kubernetes/charts/ovnkube-identity/templates/rbac-ovnkube-identity.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: ovnkube-identity
rules:
    - apiGroups: [""]
      resources:
          - nodes
      verbs: ["get", "list", "watch"]
    - apiGroups: ["certificates.k8s.io"]
      resources:
          - certificatesigningrequests
      verbs: ["get", "list", "watch"]
    - apiGroups: ["certificates.k8s.io"]
      resources:
          - certificatesigningrequests/approval
      verbs: ["update"]
    - apiGroups: [""]
      resources:
          - events
      verbs: ["create", "patch", "update"]
    - apiGroups: ["certificates.k8s.io"]
      resources:
          - signers
      resourceNames:
          - kubernetes.io/kube-apiserver-client
      verbs: ["approve"]
---
# Source: ovn-kubernetes/charts/ovnkube-master/templates/rbac-ovnkube-master.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: ovnkube-master
rules:
    - apiGroups: [""]
      resources:
          - namespaces
          - nodes
          - nodes/status
          - pods
          - services
          - endpoints
      verbs: [ "get", "list", "watch" ]
    - apiGroups: ["discovery.k8s.io"]
      resources:
          - endpointslices
      verbs: [ "get", "list", "watch" ]
    - apiGroups: ["networking.k8s.io"]
      resources:
          - networkpolicies
      verbs: [ "get", "list", "watch" ]
    - apiGroups: ["policy.networking.k8s.io"]
      resources:
          - adminnetworkpolicies
          - baselineadminnetworkpolicies
      verbs: ["list", "get", "watch"]
    - apiGroups: ["k8s.ovn.org"]
      resources:
          - egressfirewalls
          - egressips
          - egressqoses
          - egressservices
          - adminpolicybasedexternalroutes
          - userdefinednetworks
          - clusteruserdefinednetworks
          - networkqoses
      verbs: [ "get", "list", "watch" ]
    - apiGroups: ["k8s.cni.cncf.io"]
      resources:
          - ipamclaims
      verbs: [ "get", "list", "watch" ]
    - apiGroups: ["k8s.cni.cncf.io"]
      resources:
          - network-attachment-definitions
          - multi-networkpolicies
      verbs: ["list", "get", "watch"]
    - apiGroups: ["k8s.cni.cncf.io"]
      resources:
          - network-attachment-definitions
      verbs: [ "patch", "update" ]
    - apiGroups: [ "k8s.cni.cncf.io" ]
      resources:
      - network-attachment-definitions
      verbs: [ "create", "delete" ]
    - apiGroups: ["policy.networking.k8s.io"]
      resources:
          - adminnetworkpolicies/status
          - baselineadminnetworkpolicies/status
      verbs: [ "patch", "update" ]
    - apiGroups: ["k8s.ovn.org"]
      resources:
          - egressfirewalls/status
          - egressips
          - egressqoses
          - networkqoses
          - egressservices/status
          - adminpolicybasedexternalroutes/status
          - egressqoses/status
          - userdefinednetworks
          - userdefinednetworks/status
          - clusteruserdefinednetworks
          - clusteruserdefinednetworks/status
          - clusteruserdefinednetworks/finalizers
          - networkqoses/status
      verbs: [ "patch", "update" ]
    - apiGroups: [""]
      resources:
          - events
      verbs: ["create", "patch", "update"]
    - apiGroups: [""]
      resources:
          - nodes/status
          - pods/status
          - services/status
      verbs: [ "patch", "update" ]
# https://github.com/ovn-org/ovn-kubernetes/blob/e1e7d40f9a6c6038b52696c1b8f8915a4d73160e/go-controller/pkg/ovn/topology_version.go#L28
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-db.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: ovnkube-db
rules:
    - apiGroups: [""]
      resources:
          - nodes
          - namespaces
      verbs: [ "get", "list", "watch" ]
# ovnkube-db startup scripts create an endpoint:
# https://github.com/ovn-org/ovn-kubernetes/blob/d3b10e87f7fffa38fdf4ad52f98bc8ba998df6c2/dist/images/ovnkube.sh#L699
# in HA statefulsets/pods are inspected
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-node.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: ovnkube-node-status-reader
rules:
    - apiGroups: [""]
      resources:
          - nodes/status
      verbs: [ "get" ]
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-node.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: ovnkube-node
rules:
    - apiGroups: [""]
      resources:
          - namespaces
          - nodes
          - pods
          - services
          - endpoints
      verbs: [ "get", "list", "watch" ]
    - apiGroups: ["discovery.k8s.io"]
      resources:
          - endpointslices
      verbs: [ "get", "list", "watch" ]
    - apiGroups: ["k8s.cni.cncf.io"]
      resources:
          - network-attachment-definitions
      verbs: ["list", "get", "watch"]
    - apiGroups: ["policy.networking.k8s.io"]
      resources:
          - adminnetworkpolicies
          - baselineadminnetworkpolicies
      verbs: ["list", "get", "watch"]
    - apiGroups: ["k8s.ovn.org"]
      resources:
          - egressfirewalls
          - egressips
          - egressqoses
          - egressservices
          - adminpolicybasedexternalroutes
          - userdefinednetworks
          - clusteruserdefinednetworks
          - networkqoses
      verbs: [ "get", "list", "watch" ]
    - apiGroups: ["certificates.k8s.io"]
      resources:
          - certificatesigningrequests
      verbs:
        - create
        - get
        - list
        - watch
    - apiGroups: [""]
      resources:
          - events
      verbs: ["create", "patch", "update"]
    - apiGroups: [""]
      resources:
          - pods/status # In IC ovnkube-controller, and ovnkube-node in DPU mode updates pod annotations for local pods
          - nodes/status
      verbs: [ "patch", "update" ]
# Without IC endpoints are read by ovnkube-node on startup
# With IC endpoints are created by ovnkube-zone-controller/sb-ovsdb startup script in multinode-zone for IC
---
# Source: ovn-kubernetes/charts/ovnkube-identity/templates/rbac-ovnkube-identity.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: ovnkube-identity
roleRef:
    name: ovnkube-identity
    kind: ClusterRole
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-identity
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/charts/ovnkube-master/templates/rbac-ovnkube-master.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: ovnkube-master
roleRef:
    name: ovnkube-master
    kind: ClusterRole
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-master
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-db.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: ovnkube-db
roleRef:
    name: ovnkube-db
    kind: ClusterRole
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-db
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-node.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: ovnkube-node
roleRef:
    name: ovnkube-node
    kind: ClusterRole
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: Group
      name: system:ovn-nodes
      apiGroup: rbac.authorization.k8s.io
# even when ovn_enable_ovnkube_identity is enabled, an ovnkube-node service account
# is used in the ovnkube-node pod during initialization:
# https://github.com/ovn-org/ovn-kubernetes/blob/c135b19e0b424c847e1de8bc214d884f8f905a8c/dist/images/ovnkube.sh#L2249
# https://github.com/ovn-org/ovn-kubernetes/blob/c135b19e0b424c847e1de8bc214d884f8f905a8c/dist/images/ovnkube.sh#L748
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-node.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: ovnkube-node-status-reader
roleRef:
    name: ovnkube-node-status-reader
    kind: ClusterRole
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-node
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/charts/ovnkube-master/templates/rbac-ovnkube-master.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    namespace: ovn-kubernetes
    name: ovn-k8s-configmap-update
rules:
    - apiGroups: [""]
      resources: ["configmaps"]
      verbs: ["create", "patch", "update"]
---
# Source: ovn-kubernetes/templates/ovn-setup.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ovn-kubernetes
  name: ovn-k8s-configmap
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-db.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: ovnkube-db-ep
    namespace: ovn-kubernetes
rules:
    - apiGroups: [""]
      resources:
          - endpoints
      verbs: [ "get", "create" ]
    - apiGroups: [""]
      resources:
          - pods
      verbs: [ "get", "list" ]
    - apiGroups: ["apps"]
      resources:
          - statefulsets
      verbs: [ "get" ]
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-node.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: ovnkube-node-ep
    namespace: ovn-kubernetes
rules:
    - apiGroups: [""]
      resources:
          - endpoints
      verbs:
          - get
---
# Source: ovn-kubernetes/charts/ovnkube-identity/templates/rbac-ovnkube-identity.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: ovnkube-identity-configmaps
    namespace: ovn-kubernetes
roleRef:
    name: ovn-k8s-configmap
    kind: Role
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-identity
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/charts/ovnkube-master/templates/rbac-ovnkube-master.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: ovnkube-master-configmaps
    namespace: ovn-kubernetes
roleRef:
    name: ovn-k8s-configmap
    kind: Role
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-master
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/charts/ovnkube-master/templates/rbac-ovnkube-master.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: ovnkube-master-configmaps-update
    namespace: ovn-kubernetes
roleRef:
    name: ovn-k8s-configmap-update
    kind: Role
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-master
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-db.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: ovnkube-db-ep
    namespace: ovn-kubernetes
roleRef:
    name: ovnkube-db-ep
    kind: Role
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-db
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-node.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: ovnkube-node-configmaps
    namespace: ovn-kubernetes
roleRef:
    name: ovn-k8s-configmap
    kind: Role
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: Group
      name: system:ovn-nodes
      apiGroup: rbac.authorization.k8s.io

# In IC ovnkube-node pod needs configmap access in ovn-k ns for topology version:
# https://github.com/ovn-org/ovn-kubernetes/blob/e1e7d40f9a6c6038b52696c1b8f8915a4d73160e/go-controller/pkg/ovn/topology_version.go#L28
# even when ovn_enable_ovnkube_identity is enabled, an ovnkube-node service account
# is used in the ovnkube-node pod during initialization:
# https://github.com/ovn-org/ovn-kubernetes/blob/c135b19e0b424c847e1de8bc214d884f8f905a8c/dist/images/ovnkube.sh#L366
---
# Source: ovn-kubernetes/templates/rbac-ovnkube-node.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: ovnkube-node-ep
    namespace: ovn-kubernetes
roleRef:
    name: ovnkube-node-ep
    kind: Role
    apiGroup: rbac.authorization.k8s.io
subjects:
    - kind: ServiceAccount
      name: ovnkube-node
      namespace: ovn-kubernetes
---
# Source: ovn-kubernetes/charts/ovnkube-db/templates/service.yaml
# service to expose the ovnkube-db pod
apiVersion: v1
kind: Service
metadata:
  name: ovnkube-db
  namespace: ovn-kubernetes
spec:
  ports:
  - name: north
    port: 6641
    protocol: TCP
    targetPort: 6641
  - name: south
    port: 6642
    protocol: TCP
    targetPort: 6642
  sessionAffinity: None
  clusterIP: None
  type: ClusterIP
---
# Source: ovn-kubernetes/templates/ovnkube-monitor.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: ovnkube-master
  name: ovnkube-master-prometheus-discovery
  namespace: ovn-kubernetes
spec:
  selector:
    name: ovnkube-master
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: http-metrics
    port: 9409
    protocol: TCP
    targetPort: 9409
---
# Source: ovn-kubernetes/templates/ovnkube-monitor.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: ovnkube-node
  name: ovnkube-node-prometheus-discovery
  namespace: ovn-kubernetes
spec:
  selector:
    name: ovnkube-node
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: ovnkube-node-metrics
    port: 9410
    protocol: TCP
    targetPort: 9410
  - name: ovn-metrics
    port: 9476
    protocol: TCP
    targetPort: 9476
  - name: ovs-metrics
    port: 9310
    protocol: TCP
    targetPort: 9310
---
# Source: ovn-kubernetes/templates/ovnkube-monitor.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: ovnkube-cluster-manager
  name: ovnkube-cluster-manager-prometheus-discovery
  namespace: ovn-kubernetes
spec:
  selector:
    name: ovnkube-cluster-manager
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: http-metrics
    port: 9411
    protocol: TCP
    targetPort: 9411
---
# Source: ovn-kubernetes/charts/ovnkube-identity/templates/ovnkube-identity.yaml
# ovnkube-identity
# starts ovnkube-identity
# it is run on the master(s).
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: ovnkube-identity
  # namespace set up by install
  namespace: ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This DaemonSet launches the ovnkube-identity networking component on control-plane nodes.
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: ovnkube-identity
  updateStrategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ovnkube-identity
        name: ovnkube-identity
        component: network
        type: infra
        kubernetes.io/os: "linux"
    spec:
      priorityClassName: "system-cluster-critical"
      serviceAccountName: ovnkube-identity
      hostNetwork: true
      dnsPolicy: Default
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
        kubernetes.io/os: "linux"
      containers:
      - name: ovnkube-identity
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["/root/ovnkube.sh", "ovnkube-identity"]
        securityContext:
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        volumeMounts:
          - mountPath: /etc/webhook-cert/
            name: webhook-cert
        env:
          - name: OVN_DAEMONSET_VERSION
            value: "1.0.0"
          - name: K8S_APISERVER
            valueFrom:
              configMapKeyRef:
                key: k8s_apiserver
                name: ovn-config
          - name: OVNKUBE_LOGLEVEL
            value: "4"
          - name: OVN_ENABLE_INTERCONNECT
            value: "false"
          - name: OVN_HYBRID_OVERLAY_ENABLE
            value: ""
      volumes:
        - name: webhook-cert
          secret:
            secretName: ovnkube-webhook-cert
      tolerations:
      - operator: "Exists"
---
# Source: ovn-kubernetes/charts/ovnkube-node/templates/ovnkube-node.yaml
# ovnkube-node
# daemonset version 3
# starts node daemons for ovn, each in a separate container
# it is run on all nodes
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: ovnkube-node
  # namespace set up by install
  namespace: ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This DaemonSet launches the ovn-kubernetes networking components for worker nodes.
spec:
  selector:
    matchLabels:
      app: ovnkube-node
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ovnkube-node
        name: ovnkube-node
        component: network
        type: infra
        kubernetes.io/os: "linux"
    spec:
      priorityClassName: "system-cluster-critical"
      serviceAccountName: ovnkube-node
      hostNetwork: true
      dnsPolicy: Default
      hostPID: true
      initContainers:
      - name: kubelet-provider
        image: docker.io/dorbian/public-images:ovnfig2
        command: ["cp", "-u", "/host/etc/kubernetes/kubeconfig-kubelet", "/host/etc/kubernetes/kubelet.conf"]
        volumeMounts:
        - mountPath: /host
          name: host-slash
      containers:
      - name: ovnkube-node
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args: 
        - |
          iptables -A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m tcp --dport 6641 -j ACCEPT
          iptables -A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m tcp --dport 6642 -j ACCEPT
          sleep 1
          /root/ovnkube.sh ovn-node
        securityContext:
          runAsUser: 0
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Common mounts
        # for the iptables wrapper
        - mountPath: /host
          name: host-slash
        - mountPath: /var/run/dbus/
          name: host-var-run-dbus
          readOnly: true
        - mountPath: /var/lib/kubelet
          name: host-kubelet
          readOnly: true
        - mountPath: /var/log/ovn-kubernetes/
          name: host-var-log-ovnkube
          # We mount our socket here
        - mountPath: /var/run/ovn-kubernetes
          name: host-var-run-ovn-kubernetes
        # CNI related mounts which we take over
        - mountPath: /opt/cni/bin
          name: host-opt-cni-bin
        - mountPath: /etc/cni/net.d
          name: host-etc-cni-netd
        - mountPath: /var/run/netns
          name: host-netns
          mountPropagation: Bidirectional
        # ovnkube-node only mounts (non dpu related)
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        - mountPath: /etc/openvswitch/
          name: host-etc-ovs
          readOnly: true
        - mountPath: /etc/ovn/
          name: host-var-lib-ovs
          readOnly: true
        # - mountPath: /run/systemd/private
        #   name: run-systemd
        #   subPath: private
        #   readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVNKUBE_LOGLEVEL
          value: "4"
        - name: OVNKUBE_LOGFILE_MAXSIZE
          value: "100"
        - name: OVNKUBE_LOGFILE_MAXBACKUPS
          value: "5"
        - name: OVNKUBE_LOGFILE_MAXAGE
          value: "5"
        - name: OVN_NET_CIDR
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: net_cidr
        - name: OVN_SVC_CIDR
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: svc_cidr
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: OVN_MTU
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: mtu
        - name: OVN_ROUTABLE_MTU
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: routable_mtu
              optional: true
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OVN_GATEWAY_MODE
          value: shared
        - name: OVN_GATEWAY_OPTS
          value: ""
        - name: OVN_HYBRID_OVERLAY_ENABLE
          value: ""
        - name: OVN_ADMIN_NETWORK_POLICY_ENABLE
          value: ""
        - name: OVN_EGRESSIP_ENABLE
          value: "true"
        - name: OVN_EGRESSIP_HEALTHCHECK_PORT
          value: "9107"
        - name: OVN_EGRESSSERVICE_ENABLE
          value: "true"
        - name: OVN_HYBRID_OVERLAY_NET_CIDR
          value: ""
        - name: OVN_DISABLE_SNAT_MULTIPLE_GWS
          value: ""
        - name: OVN_DISABLE_FORWARDING
          value: ""
        - name: OVN_ENCAP_PORT
          value: "6081"
        - name: OVN_DISABLE_PKT_MTU_CHECK
          value: ""
        - name: OVN_NETFLOW_TARGETS
          value: ""
        - name: OVN_SFLOW_TARGETS
          value: ""
        - name: OVN_IPFIX_TARGETS
          value: ""
        - name: OVN_IPFIX_SAMPLING
          value: ""
        - name: OVN_IPFIX_CACHE_MAX_FLOWS
          value: ""
        - name: OVN_IPFIX_CACHE_ACTIVE_TIMEOUT
          value: ""
        - name: OVN_V4_JOIN_SUBNET
          value: ""
        - name: OVN_V6_JOIN_SUBNET
          value: ""
        - name: OVN_V4_MASQUERADE_SUBNET
          value: "169.254.0.0/17"
        - name: OVN_V6_MASQUERADE_SUBNET
          value: "fd69::/112"
        - name: OVN_MULTICAST_ENABLE
          value: ""
        - name: OVN_UNPRIVILEGED_MODE
          value: "no"
        - name: OVN_EX_GW_NETWORK_INTERFACE
          value: ""
        - name: OVN_ENABLE_OVNKUBE_IDENTITY
          value: "true"
        - name: OVN_SSL_ENABLE
          value: "no"
        - name: OVN_DISABLE_OVN_IFACE_ID_VER
          value: "false"
        - name: OVN_REMOTE_PROBE_INTERVAL
          value: "100000"
        - name: OVN_MONITOR_ALL
          value: ""
        - name: OVN_OFCTRL_WAIT_BEFORE_CLEAR
          value: ""
        - name: OVN_ENABLE_LFLOW_CACHE
          value: "true"
        - name: OVN_LFLOW_CACHE_LIMIT
          value: ""
        - name: OVN_LFLOW_CACHE_LIMIT_KB
          value: ""
        - name: OVN_MULTI_NETWORK_ENABLE
          value: "false"
        - name: OVN_NETWORK_SEGMENTATION_ENABLE
          value: ""
        - name: OVN_ENABLE_INTERCONNECT
          value: "false"
        - name: OVN_ENABLE_MULTI_EXTERNAL_GATEWAY
          value: "true"
        - name: OVNKUBE_NODE_MGMT_PORT_NETDEV
          value: ""
        - name: OVN_NETWORK_QOS_ENABLE
          value: "false"
        - name: OVN_HOST_NETWORK_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: host_network_namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        readinessProbe:
          exec:
            command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovnkube-node"]
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
      - name: ovn-controller
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["/root/ovnkube.sh", "ovn-controller"]
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["SYS_NICE"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/dbus/
          name: host-var-run-dbus
          readOnly: true
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/log/ovn/
          name: host-var-log-ovs
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVN_LOGLEVEL_CONTROLLER
          value: "-vconsole:info"
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OVN_SSL_ENABLE
          value: "no"
        readinessProbe:
          exec:
            command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovn-controller"]
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
        # ovs-metrics-exporter - v3
      - name: ovs-metrics-exporter
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["/root/ovnkube.sh", "ovs-metrics"]
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/dbus/
          name: host-var-run-dbus
          readOnly: true
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        # end of container
      nodeSelector:
        kubernetes.io/os: "linux"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: k8s.ovn.org/dpu-host
                operator: DoesNotExist
              - key: k8s.ovn.org/dpu
                operator: DoesNotExist
      volumes:
      # Common volumes
      - name: host-var-run-dbus
        hostPath:
          path: /run/dbus
      - name: host-kubelet
        hostPath:
          path: /var/lib/kubelet
      - name: host-var-log-ovnkube
        hostPath:
          path: /var/log/ovn-kubernetes
      - name: host-var-run-ovn-kubernetes
        hostPath:
          path: /var/run/ovn-kubernetes
      - name: host-opt-cni-bin
        hostPath:
          path: /opt/cni/bin
      - name: host-etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
      - name: host-slash
        hostPath:
          path: /
          type: Directory
      - name: host-netns
        hostPath:
          path: /run/netns
      # non DPU related volumes
      - name: host-var-log-ovs
        hostPath:
          path: /var/log/openvswitch
      - name: host-run-ovs
        hostPath:
          path: /run/openvswitch
      - name: host-var-run-ovs
        hostPath:
          path: /run/openvswitch
      - name: host-ovn-cert
        hostPath:
          path: /var/etc/ovn
          type: DirectoryOrCreate
      - name: host-var-lib-ovs
        hostPath:
          path: /var/lib/openvswitch
      - name: host-etc-ovs
        hostPath:
          path: /var/etc/openvswitch
      # - name: run-systemd
      #   hostPath:
      #     path: /run/systemd
      tolerations:
      - operator: "Exists"
---
# Source: ovn-kubernetes/charts/ovs-node/templates/ovs-node.yaml
# ovs-node
# daemonset version 3
# starts node daemons for ovs
# it is run on all nodes
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: ovs-node
  # namespace set up by install
  namespace: ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This DaemonSet launches the ovs networking components for all nodes.
spec:
  selector:
    matchLabels:
      app: ovs-node
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ovs-node
        name: ovs-node
        component: network
        type: infra
        kubernetes.io/os: "linux"
      annotations:
    spec:
      priorityClassName: "system-cluster-critical"
      hostNetwork: true
      dnsPolicy: Default
      hostPID: true
      containers:
      # ovsdb-server and ovs-switchd daemons
      - name: ovs-daemons
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["/root/ovnkube.sh", "ovs-server"]
        livenessProbe:
          exec:
            command:
            - /usr/share/openvswitch/scripts/ovs-ctl
            - status
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
        readinessProbe:
          exec:
            command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovs-daemons"]
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
        securityContext:
          runAsUser: 0
          # Permission could be reduced by selecting an appropriate SELinux policy
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /lib/modules
          name: host-modules
          readOnly: true
        - mountPath: /run/openvswitch
          name: host-run-ovs
        - mountPath: /var/run/openvswitch
          name: host-var-run-ovs
        - mountPath: /sys
          name: host-sys
        - mountPath: /etc/openvswitch
          name: host-config-openvswitch
        - mountPath: /var/run/dbus/
          name: host-var-run-dbus
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/lib/openvswitch/
          name: host-var-lib-ovs
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
          limits:
            cpu: 500m
            memory: 500Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        lifecycle:
          preStop:
            exec:
              command: ["/root/ovnkube.sh", "cleanup-ovs-server"]
      nodeSelector:
        kubernetes.io/os: "linux"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: k8s.ovn.org/dpu-host
                operator: DoesNotExist
      volumes:
      - name: host-modules
        hostPath:
          path: /lib/modules
      - name: host-var-run-dbus
        hostPath:
          path: /run/dbus
      - name: host-var-log-ovs
        hostPath:
          path: /var/log/openvswitch
      - name: host-run-ovs
        hostPath:
          path: /run/openvswitch
      - name: host-var-run-ovs
        hostPath:
          path: /run/openvswitch
      - name: host-sys
        hostPath:
          path: /sys
      - name: host-config-openvswitch
        hostPath:
          path: /var/etc/origin/openvswitch
      - name: host-var-lib-ovs
        hostPath:
          path: /var/lib/openvswitch
      tolerations:
      - operator: "Exists"
---
# Source: ovn-kubernetes/charts/ovnkube-db/templates/deployment.yaml
# ovnkube-db
# daemonset version 3
# starts ovn NB/SB ovsdb daemons, each in a separate container
# it is running on master for now, but does not need to be the case
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ovnkube-db
  # namespace set up by install
  namespace: ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This daemonset launches the OVN NB/SB ovsdb service components.
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: ovnkube-db
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: ovnkube-db
        component: network
        type: infra
        kubernetes.io/os: "linux"
        ovn-db-pod: "true"
    spec:
      priorityClassName: "system-cluster-critical"
      # Requires fairly broad permissions - ability to read all services and network functions as well
      # as all pods.
      serviceAccountName: ovnkube-db
      hostNetwork: true
      dnsPolicy: Default
      containers:
      # firewall rules for ovn - assumed to be setup
      # iptables -A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m tcp --dport 6641 -j ACCEPT
      # iptables -A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m tcp --dport 6642 -j ACCEPT
      # nb-ovsdb - v3
      - name: nb-ovsdb
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["/root/ovnkube.sh", "nb-ovsdb"]
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # ovn db is stored in the pod in /etc/openvswitch
        # (or in /etc/ovn if OVN from new repository is used)
        # and on the host in /var/lib/openvswitch/
        - mountPath: /etc/openvswitch/
          name: host-var-lib-ovs
        - mountPath: /etc/ovn/
          name: host-var-lib-ovs
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/log/ovn/
          name: host-var-log-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVN_LOGLEVEL_NB
          value: -vconsole:info -vfile:info
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OVN_SSL_ENABLE
          value: "no"
        - name: OVN_NB_PORT
          value: "6641"
        - name: ENABLE_IPSEC
          value: "false"
        readinessProbe:
          exec:
            command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovnnb-db"]
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
      # end of container
      # sb-ovsdb - v3
      - name: sb-ovsdb
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["/root/ovnkube.sh", "sb-ovsdb"]
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # ovn db is stored in the pod in /etc/openvswitch
        # (or in /etc/ovn if OVN from new repository is used)
        # and on the host in /var/lib/openvswitch/
        - mountPath: /etc/openvswitch/
          name: host-var-lib-ovs
        - mountPath: /etc/ovn/
          name: host-var-lib-ovs
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/log/ovn/
          name: host-var-log-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVN_LOGLEVEL_SB
          value: -vconsole:info -vfile:info
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OVN_SSL_ENABLE
          value: "no"
        - name: OVN_SB_PORT
          value: "6642"
        readinessProbe:
          exec:
            command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovnsb-db"]
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
      # end of container
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - ovnkube-db
            topologyKey: kubernetes.io/hostname
      volumes:
      - name: host-var-lib-ovs
        hostPath:
          path: /var/lib/openvswitch
      - name: host-var-log-ovs
        hostPath:
          path: /var/log/openvswitch
      - name: host-ovn-cert
        hostPath:
          path: /var/etc/ovn
          type: DirectoryOrCreate
      - name: host-var-run-ovs
        hostPath:
          path: /run/openvswitch
      tolerations:
      - operator: "Exists"
---
# Source: ovn-kubernetes/charts/ovnkube-master/templates/deployment-ovnkube-master.yaml
# ovnkube-master
# daemonset version 3
# starts master daemons (ovnkube-master and ovn-northd), each in a separate container
# it is run on the master(s)
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ovnkube-master
  # namespace set up by install
  namespace: ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This Deployment launches the ovn-kubernetes master networking components.
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: ovnkube-master
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: ovnkube-master
        component: network
        type: infra
        kubernetes.io/os: "linux"
    spec:
      priorityClassName: "system-cluster-critical"
      # Requires fairly broad permissions - ability to read all services and network functions as well
      # as all pods.
      serviceAccountName: ovnkube-master
      hostNetwork: true
      dnsPolicy: Default
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - ovnkube-master
            topologyKey: kubernetes.io/hostname
      containers:
      # ovn-northd - v3
      - name: ovn-northd
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["/root/ovnkube.sh", "run-ovn-northd"]
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["SYS_NICE"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Run directories where we need to be able to access sockets
        - mountPath: /var/run/dbus/
          name: host-var-run-dbus
          readOnly: true
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/log/ovn/
          name: host-var-log-ovs
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVN_LOGLEVEL_NORTHD
          value: "-vconsole:info -vfile:info"
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OVN_SSL_ENABLE
          value: "no"
        readinessProbe:
          exec:
            command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovn-northd"]
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
      # end of container
      - name: ovnkube-master
        image: docker.io/dorbian/public-images:ovnfig2
        imagePullPolicy: IfNotPresent
        command: ["/root/ovnkube.sh", "ovn-master"]
        securityContext:
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Run directories where we need to be able to access sockets
        - mountPath: /var/run/dbus/
          name: host-var-run-dbus
          readOnly: true
        - mountPath: /var/log/ovn-kubernetes/
          name: host-var-log-ovnkube
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVNKUBE_LOGLEVEL
          value: "4"
        - name: OVNKUBE_LOGFILE_MAXSIZE
          value: "100"
        - name: OVNKUBE_LOGFILE_MAXBACKUPS
          value: "5"
        - name: OVNKUBE_LOGFILE_MAXAGE
          value: "5"
        - name: OVNKUBE_LIBOVSDB_CLIENT_LOGFILE
          value: ""
        - name: OVNKUBE_CONFIG_DURATION_ENABLE
          value: ""
        - name: OVNKUBE_METRICS_SCALE_ENABLE
          value: ""
        - name: OVNKUBE_COMPACT_MODE_ENABLE
          value: "false"
        - name: OVN_NET_CIDR
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: net_cidr
        - name: OVN_SVC_CIDR
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: svc_cidr
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OVN_HYBRID_OVERLAY_ENABLE
          value: ""
        - name: OVN_ADMIN_NETWORK_POLICY_ENABLE
          value: ""
        - name: OVN_EGRESSIP_ENABLE
          value: "true"
        - name: OVN_EGRESSIP_HEALTHCHECK_PORT
          value: "9107"
        - name: OVN_EGRESSFIREWALL_ENABLE
          value: "true"
        - name: OVN_EGRESSQOS_ENABLE
          value: "true"
        - name: OVN_MULTI_NETWORK_ENABLE
          value: "false"
        - name: OVN_NETWORK_SEGMENTATION_ENABLE
          value: ""
        - name: OVN_EGRESSSERVICE_ENABLE
          value: "true"
        - name: OVN_HYBRID_OVERLAY_NET_CIDR
          value: ""
        - name: OVN_DISABLE_SNAT_MULTIPLE_GWS
          value: ""
        - name: OVN_DISABLE_FORWARDING
          value: ""
        - name: OVN_ENCAP_PORT
          value: "6081"
        - name: OVN_EMPTY_LB_EVENTS
          value: ""
        - name: OVN_V4_JOIN_SUBNET
          value: ""
        - name: OVN_V6_JOIN_SUBNET
          value: ""
        - name: OVN_V4_MASQUERADE_SUBNET
          value: "169.254.0.0/17"
        - name: OVN_V6_MASQUERADE_SUBNET
          value: "fd69::/112"
        - name: OVN_SSL_ENABLE
          value: "no"
        - name: OVN_GATEWAY_MODE
          value: shared
        - name: OVN_GATEWAY_OPTS
          value: ""
        - name: OVN_MULTICAST_ENABLE
          value: ""
        - name: OVN_ACL_LOGGING_RATE_LIMIT
          value: "20"
        - name: OVN_STATELESS_NETPOL_ENABLE
          value: "false"
        - name: OVN_ENABLE_MULTI_EXTERNAL_GATEWAY
          value: "true"
        - name: OVN_ENABLE_SVC_TEMPLATE_SUPPORT
          value: "true"
        - name: OVN_NOHOSTSUBNET_LABEL
          value: "k8s.ovn.org/ovn-managed=false"
        - name: OVN_NETWORK_QOS_ENABLE
          value: "false"
        - name: OVN_HOST_NETWORK_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: host_network_namespace
        - name: OVN_ENABLE_PERSISTENT_IPS
          value: "false"
        - name: OVN_ENABLE_DNSNAMERESOLVER
          value: "false"
        - name: OVN_DISABLE_REQUESTEDCHASSIS
          value: "false"
      # end of container
      volumes:
      # TODO: Need to check why we need this?
      - name: host-var-run-dbus
        hostPath:
          path: /run/dbus
      - name: host-var-log-ovs
        hostPath:
          path: /var/log/openvswitch
      - name: host-var-log-ovnkube
        hostPath:
          path: /var/log/ovn-kubernetes
      - name: host-var-run-ovs
        hostPath:
          path: /run/openvswitch
      - name: host-ovn-cert
        hostPath:
          path: /var/etc/ovn
          type: DirectoryOrCreate
      tolerations:
      - operator: "Exists"
---
# Source: ovn-kubernetes/charts/ovnkube-identity/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: ovn-kubernetes-admission-webhook-node
webhooks:
  - name: ovn-kubernetes-admission-webhook-node.k8s.io
    clientConfig:
      url: https://localhost:9443/node
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRY2g1eFhWRzdaTEt3K3IvMnA3S3JBakFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5UQTFNRFl3TmpNMU5URmFGdzB5TmpBMgpNVEF3TmpNMU5URmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExTGV2UVJHM2tjM3pyR21vVWU2ZmNKWmFhc2pqRi9KY0xiVDIKT0VnS2h2S1N1ZHJ0a29OS3BCaGdwTC82aE1aOGJXVm9IZjFZSkc5T1d3VzVrTWFSRXNxYUNkcDRTTTJ4cmx6ZgordlBzMEZPTS92MXVaRWJpMHVvTTBQOHZrVktNejRIUlJ4K045WVRVR0ZFZEtwbGdsVERCQU5JSmpSajBvdTNBClZ2U1BiOTZqNW1aeGlIcmJ4aEhaVEdzcHhFRDlaM1BhZ3Vja1FpdXpPT1JSa0M1ZlppU3ZzWUcrZUFRdmMwTUUKQnBET0J2cTkvcmN5bTRCcm9Db3dOeGFqMWROb2QwYTB4SCtHVThFNHAzaFprK0xScE1zRC9heUs2RU5IdnVwUgpaYXNiY1grU0Z5K1lvbVlNQm1BYVV2eW9lRW01NU1RZDNrajR5eHBZNG9KZGUxeWVad0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm55c3JtcWRuMi8vUmFjSWtPMzZ6bG5qZHpnTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3JBMWRQS3VJdDB6WFhBT1AyK0o1ZDAyRTZjdzR3ZnVCeXlOQ0c1U1NHCit6bzd6K2lackpXbTAzS0VqdVB3UHlDbzg0SHR1VVNxVXJ4c0xIYUlYaStZcHA1UHVRZXo1bkVibGlRbjZSSnoKWk9Jek9pM0oyN3lZaVpOTkhIRnN6SzVSV1ZPcnI5TXovWFgwYUxNV0YxNHdodGxzM25XdjZ5cG83dUNzMkxMbwpvQWhDcmNNVklaazltVUFmeVJQQ3A0c3VLTTBISHJTd2MzZFUrVkdic1hoYmhVZjE1ZUNreTBFc3I1UFhrRXJOCml0L1R2N2c5d3o4NW9hais3SkZGQ2lpUHY2N3VQT0lSbTFSYUVlQXljc01SZFFKQkhoeDhYa2R5SEhHWU9kZEEKcVNWR1d2cG9rV0lxb0RtcXU0R01jemszWS9JN1FsSWZQM3FWVjRmNWtjNy8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    admissionReviewVersions: ['v1']
    sideEffects: None
    rules:
      - operations: [ "UPDATE" ]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["nodes/status"] # Using /status subresource doesn't protect from other users changing the annotations
        scope: "*"
# in non-ic environments ovnkube-node doesn't have the permissions to update pods
